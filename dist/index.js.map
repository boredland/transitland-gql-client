{"version":3,"sources":["../src/_client/runtime/error.ts","../src/_client/runtime/batcher.ts","../src/_client/runtime/fetcher.ts","../src/_client/runtime/generateGraphqlOperation.ts","../src/_client/runtime/createClient.ts","../src/_client/runtime/linkTypeMap.ts","../src/_client/types.ts","../src/_client/schema.ts","../src/_client/index.ts","../src/index.ts"],"names":["GenqlError","errors","data","message","x","dispatchQueueBatch","client","queue","batchedQuery","item","responses","i","dispatchQueue","options","maxBatchSize","QueryBatcher","fetcher","batchInterval","shouldBatch","query","variables","operationName","overrides","request","resolve","reject","DEFAULT_BATCH_OPTIONS","createFetcher","_a","_b","url","headers","_fetch","batch","rest","__objRest","body","__async","headersObject","res","__spreadValues","json","batcher","_0","parseRequest","ctx","path","args","fields","argNames","field","getFieldFromPath","argName","varName","typing","fieldNames","k","type","scalarFields","scalarFieldsFragment","falsyFieldNames","f","parsed","implementationFragment","typeMatch","generateGraphqlOperation","operation","root","result","varNames","varsString","v","variableType","r","current","possibleTypes","types","fieldName","found","createClient","queryRoot","mutationRoot","subscriptionRoot","linkTypeMap","typeMap","indexToName","intermediaryTypeMap","typeIndex","argTypeName","argTypeString","resolveConcreteTypes","linkedTypeMap","typeNameFromKey","key","arg","typeName","types_default","Agency_possibleTypes","isAgency","obj","AgencyPlace_possibleTypes","isAgencyPlace","Alert_possibleTypes","isAlert","Calendar_possibleTypes","isCalendar","CensusGeography_possibleTypes","isCensusGeography","CensusTable_possibleTypes","isCensusTable","CensusValue_possibleTypes","isCensusValue","Directions_possibleTypes","isDirections","Distance_possibleTypes","isDistance","Duration_possibleTypes","isDuration","Feed_possibleTypes","isFeed","FeedAuthorization_possibleTypes","isFeedAuthorization","FeedFetch_possibleTypes","isFeedFetch","FeedInfo_possibleTypes","isFeedInfo","FeedLicense_possibleTypes","isFeedLicense","FeedState_possibleTypes","isFeedState","FeedUrls_possibleTypes","isFeedUrls","FeedVersion_possibleTypes","isFeedVersion","FeedVersionDeleteResult_possibleTypes","isFeedVersionDeleteResult","FeedVersionFetchResult_possibleTypes","isFeedVersionFetchResult","FeedVersionFileInfo_possibleTypes","isFeedVersionFileInfo","FeedVersionGtfsImport_possibleTypes","isFeedVersionGtfsImport","FeedVersionImportResult_possibleTypes","isFeedVersionImportResult","FeedVersionServiceLevel_possibleTypes","isFeedVersionServiceLevel","FeedVersionUnimportResult_possibleTypes","isFeedVersionUnimportResult","Frequency_possibleTypes","isFrequency","GbfsAlertTime_possibleTypes","isGbfsAlertTime","GbfsBrandAsset_possibleTypes","isGbfsBrandAsset","GbfsFeed_possibleTypes","isGbfsFeed","GbfsFreeBikeStatus_possibleTypes","isGbfsFreeBikeStatus","GbfsGeofenceFeature_possibleTypes","isGbfsGeofenceFeature","GbfsGeofenceProperty_possibleTypes","isGbfsGeofenceProperty","GbfsGeofenceRule_possibleTypes","isGbfsGeofenceRule","GbfsGeofenceZone_possibleTypes","isGbfsGeofenceZone","GbfsPlanPrice_possibleTypes","isGbfsPlanPrice","GbfsRentalApp_possibleTypes","isGbfsRentalApp","GbfsRentalApps_possibleTypes","isGbfsRentalApps","GbfsRentalUris_possibleTypes","isGbfsRentalUris","GbfsStationInformation_possibleTypes","isGbfsStationInformation","GbfsStationStatus_possibleTypes","isGbfsStationStatus","GbfsSystemAlert_possibleTypes","isGbfsSystemAlert","GbfsSystemCalendar_possibleTypes","isGbfsSystemCalendar","GbfsSystemHour_possibleTypes","isGbfsSystemHour","GbfsSystemInformation_possibleTypes","isGbfsSystemInformation","GbfsSystemPricingPlan_possibleTypes","isGbfsSystemPricingPlan","GbfsSystemRegion_possibleTypes","isGbfsSystemRegion","GbfsSystemVersion_possibleTypes","isGbfsSystemVersion","GbfsVehicleAssets_possibleTypes","isGbfsVehicleAssets","GbfsVehicleDockAvailable_possibleTypes","isGbfsVehicleDockAvailable","GbfsVehicleType_possibleTypes","isGbfsVehicleType","GbfsVehicleTypeAvailable_possibleTypes","isGbfsVehicleTypeAvailable","Itinerary_possibleTypes","isItinerary","Leg_possibleTypes","isLeg","Level_possibleTypes","isLevel","Operator_possibleTypes","isOperator","Pathway_possibleTypes","isPathway","Place_possibleTypes","isPlace","Query_possibleTypes","isQuery","RTTimeRange_possibleTypes","isRTTimeRange","RTTranslation_possibleTypes","isRTTranslation","RTTripDescriptor_possibleTypes","isRTTripDescriptor","RTVehicleDescriptor_possibleTypes","isRTVehicleDescriptor","Route_possibleTypes","isRoute","RouteAttribute_possibleTypes","isRouteAttribute","RouteGeometry_possibleTypes","isRouteGeometry","RouteHeadway_possibleTypes","isRouteHeadway","RouteStop_possibleTypes","isRouteStop","RouteStopBuffer_possibleTypes","isRouteStopBuffer","RouteStopPattern_possibleTypes","isRouteStopPattern","Shape_possibleTypes","isShape","Step_possibleTypes","isStep","Stop_possibleTypes","isStop","StopExternalReference_possibleTypes","isStopExternalReference","StopObservation_possibleTypes","isStopObservation","StopPlace_possibleTypes","isStopPlace","StopTime_possibleTypes","isStopTime","StopTimeEvent_possibleTypes","isStopTimeEvent","Trip_possibleTypes","isTrip","ValidationResult_possibleTypes","isValidationResult","ValidationResultError_possibleTypes","isValidationResultError","ValidationResultErrorGroup_possibleTypes","isValidationResultErrorGroup","VehiclePosition_possibleTypes","isVehiclePosition","Waypoint_possibleTypes","isWaypoint","enumDistanceUnit","enumDurationUnit","enumFeedSourceUrlTypes","enumFeedSpecTypes","enumImportStatus","enumLicenseValue","enumPlaceAggregationLevel","enumRole","enumScheduleRelationship","enumStepMode","__spreadProps","everything","generateQueryOp","apiKey"],"mappings":"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,CACL,SAAY,CACR,EACA,CACI,MAAS,CACL,EACJ,EACA,IAAO,CACH,GACA,QACJ,EACA,MAAS,CACL,EACJ,EACA,MAAS,CACL,CACJ,CACJ,CACJ,EACA,MAAS,CACL,GACA,CACI,MAAS,CACL,EACJ,EACA,MAAS,CACL,EACJ,CACJ,CACJ,EACA,WAAc,CACV,GACA,CACI,MAAS,CACL,GACA,mBACJ,CACJ,CACJ,EACA,MAAS,CACL,GACA,CACI,MAAS,CACL,EACJ,EACA,MAAS,CACL,EACJ,CACJ,CACJ,EACA,cAAiB,CACb,GACA,CACI,MAAS,CACL,EACJ,EACA,IAAO,CACH,GACA,QACJ,EACA,MAAS,CACL,EACJ,EACA,MAAS,CACL,EACJ,CACJ,CACJ,EACA,MAAS,CACL,GACA,CACI,MAAS,CACL,EACJ,EACA,IAAO,CACH,GACA,QACJ,EACA,MAAS,CACL,EACJ,EACA,MAAS,CACL,EACJ,CACJ,CACJ,EACA,UAAa,CACT,GACA,CACI,MAAS,CACL,EACJ,EACA,IAAO,CACH,GACA,QACJ,EACA,MAAS,CACL,EACJ,EACA,MAAS,CACL,EACJ,CACJ,CACJ,EACA,OAAU,CACN,GACA,CACI,MAAS,CACL,EACJ,EACA,MAAS,CACL,EACJ,EACA,MAAS,CACL,EACJ,EACA,MAAS,CACL,EACJ,CACJ,CACJ,EACA,OAAU,CACN,GACA,CACI,MAAS,CACL,EACJ,EACA,IAAO,CACH,GACA,QACJ,EACA,MAAS,CACL,EACJ,EACA,MAAS,CACL,GACJ,CACJ,CACJ,EACA,MAAS,CACL,IACA,CACI,MAAS,CACL,EACJ,EACA,IAAO,CACH,GACA,QACJ,EACA,MAAS,CACL,EACJ,EACA,MAAS,CACL,GACJ,CACJ,CACJ,EACA,MAAS,CACL,IACA,CACI,MAAS,CACL,EACJ,EACA,IAAO,CACH,GACA,QACJ,EACA,MAAS,CACL,EACJ,EACA,MAAS,CACL,GACJ,CACJ,CACJ,EACA,WAAc,CACV,GACJ,CACJ,EACA,YAAe,CACX,IAAO,CACH,EACJ,EACA,MAAS,CACL,EACJ,EACA,WAAc,CA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A,SAAY,CACR,EACJ,EACA,GAAM,CACF,EACJ,EACA,MAAS,CACL,EACJ,EACA,cAAiB,CACb,EACJ,EACA,aAAgB,CACZ,IACA,CACI,MAAS,CACL,EACJ,EACA,OAAU,CACN,EACJ,CACJ,CACJ,EACA,aAAgB,CACZ,IACA,CACI,MAAS,CACL,EACJ,EACA,MAAS,CACL,GACJ,CACJ,CACJ,EACA,WAAc,CACV,GACJ,EACA,OAAU,CACN,GACJ,EACA,mBAAsB,CAClB,GACA,CACI,MAAS,CACL,EACJ,CACJ,CACJ,EACA,iBAAoB,CAChB,GACA,CACI,MAAS,CACL,EACJ,CACJ,CACJ,EACA,MAAS,CACL,GACJ,EACA,cAAiB,CACb,GACJ,EACA,YAAe,CACX,IACA,CACI,MAAS,CACL,EACJ,CACJ,CACJ,EACA,YAAe,CACX,GACJ,EACA,UAAa,CACT,GACJ,EACA,UAAa,CACT,GACJ,EACA,QAAW,CACP,GACJ,EACA,UAAa,CACT,GACJ,EACA,WAAc,CACV,IACA,CACI,MAAS,CACL,EACJ,EACA,MAAS,CACL,GACJ,CACJ,CACJ,EACA,cAAiB,CACb,GACJ,EACA,SAAY,CACR,GACJ,EACA,cAAiB,CACb,GACJ,EACA,oBAAuB,CACnB,EACJ,EACA,QAAW,CACP,GACJ,EACA,WAAc,CACV,GACJ,CACJ,EACA,sBAAyB,CACrB,GAAM,CACF,EACJ,EACA,SAAY,CACR,CACJ,EACA,mBAAsB,CAClB,GACJ,EACA,uBAA0B,CACtB,GACJ,EACA,eAAkB,CACd,GACJ,EACA,WAAc,CACV,GACJ,CACJ,EACA,WAAc,CACV,WAAc,CACV,EACJ,EACA,2BAA8B,CAC1B,CACJ,EACA,gBAAmB,CACf,GACJ,EACA,kBAAqB,CACjB,GACJ,EACA,QAAW,CACP,EACJ,EACA,cAAiB,CACb,EACJ,EACA,KAAQ,CACJ,EACJ,EACA,WAAc,CACV,GACJ,EACA,YAAe,CACX,GACJ,EACA,OAAU,CACN,GACJ,EACA,sBAAyB,CACrB,GACJ,EACA,SAAY,CACR,CACJ,EACA,UAAa,CACT,GACJ,EACA,QAAW,CACP,G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","sourcesContent":["// @ts-nocheck\nexport class GenqlError extends Error {\n    errors: Array<GraphqlError> = []\n    /**\n     * Partial data returned by the server\n     */\n    data?: any\n    constructor(errors: any[], data: any) {\n        let message = Array.isArray(errors)\n            ? errors.map((x) => x?.message || '').join('\\n')\n            : ''\n        if (!message) {\n            message = 'GraphQL error'\n        }\n        super(message)\n        this.errors = errors\n        this.data = data\n    }\n}\n\ninterface GraphqlError {\n    message: string\n    locations?: Array<{\n        line: number\n        column: number\n    }>\n    path?: string[]\n    extensions?: Record<string, any>\n}\n","// @ts-nocheck\nimport type { GraphqlOperation } from './generateGraphqlOperation'\nimport { GenqlError } from './error'\n\ntype Variables = Record<string, any>\n\ntype QueryError = Error & {\n    message: string\n\n    locations?: Array<{\n        line: number\n        column: number\n    }>\n    path?: any\n    rid: string\n    details?: Record<string, any>\n}\ntype Result = {\n    data: Record<string, any>\n    errors: Array<QueryError>\n}\ntype Fetcher = (\n    batchedQuery: GraphqlOperation | Array<GraphqlOperation>,\n) => Promise<Array<Result>>\ntype Options = {\n    batchInterval?: number\n    shouldBatch?: boolean\n    maxBatchSize?: number\n}\ntype Queue = Array<{\n    request: GraphqlOperation\n    resolve: (...args: Array<any>) => any\n    reject: (...args: Array<any>) => any\n}>\n\n/**\n * takes a list of requests (queue) and batches them into a single server request.\n * It will then resolve each individual requests promise with the appropriate data.\n * @private\n * @param {QueryBatcher}   client - the client to use\n * @param {Queue} queue  - the list of requests to batch\n */\nfunction dispatchQueueBatch(client: QueryBatcher, queue: Queue): void {\n    let batchedQuery: any = queue.map((item) => item.request)\n\n    if (batchedQuery.length === 1) {\n        batchedQuery = batchedQuery[0]\n    }\n\n    client.fetcher(batchedQuery).then((responses: any) => {\n        if (queue.length === 1 && !Array.isArray(responses)) {\n            if (responses.errors && responses.errors.length) {\n                queue[0].reject(\n                    new GenqlError(responses.errors, responses.data),\n                )\n                return\n            }\n\n            queue[0].resolve(responses)\n            return\n        } else if (responses.length !== queue.length) {\n            throw new Error('response length did not match query length')\n        }\n\n        for (let i = 0; i < queue.length; i++) {\n            if (responses[i].errors && responses[i].errors.length) {\n                queue[i].reject(\n                    new GenqlError(responses[i].errors, responses[i].data),\n                )\n            } else {\n                queue[i].resolve(responses[i])\n            }\n        }\n    })\n}\n\n/**\n * creates a list of requests to batch according to max batch size.\n * @private\n * @param {QueryBatcher} client - the client to create list of requests from from\n * @param {Options} options - the options for the batch\n */\nfunction dispatchQueue(client: QueryBatcher, options: Options): void {\n    const queue = client._queue\n    const maxBatchSize = options.maxBatchSize || 0\n    client._queue = []\n\n    if (maxBatchSize > 0 && maxBatchSize < queue.length) {\n        for (let i = 0; i < queue.length / maxBatchSize; i++) {\n            dispatchQueueBatch(\n                client,\n                queue.slice(i * maxBatchSize, (i + 1) * maxBatchSize),\n            )\n        }\n    } else {\n        dispatchQueueBatch(client, queue)\n    }\n}\n/**\n * Create a batcher client.\n * @param {Fetcher} fetcher                 - A function that can handle the network requests to graphql endpoint\n * @param {Options} options                 - the options to be used by client\n * @param {boolean} options.shouldBatch     - should the client batch requests. (default true)\n * @param {integer} options.batchInterval   - duration (in MS) of each batch window. (default 6)\n * @param {integer} options.maxBatchSize    - max number of requests in a batch. (default 0)\n * @param {boolean} options.defaultHeaders  - default headers to include with every request\n *\n * @example\n * const fetcher = batchedQuery => fetch('path/to/graphql', {\n *    method: 'post',\n *    headers: {\n *      Accept: 'application/json',\n *      'Content-Type': 'application/json',\n *    },\n *    body: JSON.stringify(batchedQuery),\n *    credentials: 'include',\n * })\n * .then(response => response.json())\n *\n * const client = new QueryBatcher(fetcher, { maxBatchSize: 10 })\n */\n\nexport class QueryBatcher {\n    fetcher: Fetcher\n    _options: Options\n    _queue: Queue\n\n    constructor(\n        fetcher: Fetcher,\n        {\n            batchInterval = 6,\n            shouldBatch = true,\n            maxBatchSize = 0,\n        }: Options = {},\n    ) {\n        this.fetcher = fetcher\n        this._options = {\n            batchInterval,\n            shouldBatch,\n            maxBatchSize,\n        }\n        this._queue = []\n    }\n\n    /**\n     * Fetch will send a graphql request and return the parsed json.\n     * @param {string}      query          - the graphql query.\n     * @param {Variables}   variables      - any variables you wish to inject as key/value pairs.\n     * @param {[string]}    operationName  - the graphql operationName.\n     * @param {Options}     overrides      - the client options overrides.\n     *\n     * @return {promise} resolves to parsed json of server response\n     *\n     * @example\n     * client.fetch(`\n     *    query getHuman($id: ID!) {\n     *      human(id: $id) {\n     *        name\n     *        height\n     *      }\n     *    }\n     * `, { id: \"1001\" }, 'getHuman')\n     *    .then(human => {\n     *      // do something with human\n     *      console.log(human);\n     *    });\n     */\n    fetch(\n        query: string,\n        variables?: Variables,\n        operationName?: string,\n        overrides: Options = {},\n    ): Promise<Result> {\n        const request: GraphqlOperation = {\n            query,\n        }\n        const options = Object.assign({}, this._options, overrides)\n\n        if (variables) {\n            request.variables = variables\n        }\n\n        if (operationName) {\n            request.operationName = operationName\n        }\n\n        const promise = new Promise<Result>((resolve, reject) => {\n            this._queue.push({\n                request,\n                resolve,\n                reject,\n            })\n\n            if (this._queue.length === 1) {\n                if (options.shouldBatch) {\n                    setTimeout(\n                        () => dispatchQueue(this, options),\n                        options.batchInterval,\n                    )\n                } else {\n                    dispatchQueue(this, options)\n                }\n            }\n        })\n        return promise\n    }\n\n    /**\n     * Fetch will send a graphql request and return the parsed json.\n     * @param {string}      query          - the graphql query.\n     * @param {Variables}   variables      - any variables you wish to inject as key/value pairs.\n     * @param {[string]}    operationName  - the graphql operationName.\n     * @param {Options}     overrides      - the client options overrides.\n     *\n     * @return {Promise<Array<Result>>} resolves to parsed json of server response\n     *\n     * @example\n     * client.forceFetch(`\n     *    query getHuman($id: ID!) {\n     *      human(id: $id) {\n     *        name\n     *        height\n     *      }\n     *    }\n     * `, { id: \"1001\" }, 'getHuman')\n     *    .then(human => {\n     *      // do something with human\n     *      console.log(human);\n     *    });\n     */\n    forceFetch(\n        query: string,\n        variables?: Variables,\n        operationName?: string,\n        overrides: Options = {},\n    ): Promise<Result> {\n        const request: GraphqlOperation = {\n            query,\n        }\n        const options = Object.assign({}, this._options, overrides, {\n            shouldBatch: false,\n        })\n\n        if (variables) {\n            request.variables = variables\n        }\n\n        if (operationName) {\n            request.operationName = operationName\n        }\n\n        const promise = new Promise<Result>((resolve, reject) => {\n            const client = new QueryBatcher(this.fetcher, this._options)\n            client._queue = [\n                {\n                    request,\n                    resolve,\n                    reject,\n                },\n            ]\n            dispatchQueue(client, options)\n        })\n        return promise\n    }\n}\n","// @ts-nocheck\nimport { QueryBatcher } from './batcher'\n\nimport type { ClientOptions } from './createClient'\nimport type { GraphqlOperation } from './generateGraphqlOperation'\nimport { GenqlError } from './error'\n\nexport interface Fetcher {\n    (gql: GraphqlOperation): Promise<any>\n}\n\nexport type BatchOptions = {\n    batchInterval?: number // ms\n    maxBatchSize?: number\n}\n\nconst DEFAULT_BATCH_OPTIONS = {\n    maxBatchSize: 10,\n    batchInterval: 40,\n}\n\nexport const createFetcher = ({\n    url,\n    headers = {},\n    fetcher,\n    fetch: _fetch,\n    batch = false,\n    ...rest\n}: ClientOptions): Fetcher => {\n    if (!url && !fetcher) {\n        throw new Error('url or fetcher is required')\n    }\n    if (!fetcher) {\n        fetcher = async (body) => {\n            let headersObject =\n                typeof headers == 'function' ? await headers() : headers\n            headersObject = headersObject || {}\n            if (typeof fetch === 'undefined' && !_fetch) {\n                throw new Error(\n                    'Global `fetch` function is not available, pass a fetch polyfill to Genql `createClient`',\n                )\n            }\n            let fetchImpl = _fetch || fetch\n            const res = await fetchImpl(url!, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    ...headersObject,\n                },\n                method: 'POST',\n                body: JSON.stringify(body),\n                ...rest,\n            })\n            if (!res.ok) {\n                throw new Error(`${res.statusText}: ${await res.text()}`)\n            }\n            const json = await res.json()\n            return json\n        }\n    }\n\n    if (!batch) {\n        return async (body) => {\n            const json = await fetcher!(body)\n            if (Array.isArray(json)) {\n                return json.map((json) => {\n                    if (json?.errors?.length) {\n                        throw new GenqlError(json.errors || [], json.data)\n                    }\n                    return json.data\n                })\n            } else {\n                if (json?.errors?.length) {\n                    throw new GenqlError(json.errors || [], json.data)\n                }\n                return json.data\n            }\n        }\n    }\n\n    const batcher = new QueryBatcher(\n        async (batchedQuery) => {\n            // console.log(batchedQuery) // [{ query: 'query{user{age}}', variables: {} }, ...]\n            const json = await fetcher!(batchedQuery)\n            return json as any\n        },\n        batch === true ? DEFAULT_BATCH_OPTIONS : batch,\n    )\n\n    return async ({ query, variables }) => {\n        const json = await batcher.fetch(query, variables)\n        if (json?.data) {\n            return json.data\n        }\n        throw new Error(\n            'Genql batch fetcher returned unexpected result ' + JSON.stringify(json),\n        )\n    }\n}\n","// @ts-nocheck\nimport type { LinkedField, LinkedType } from './types'\n\nexport interface Args {\n    [arg: string]: any | undefined\n}\n\nexport interface Fields {\n    [field: string]: Request\n}\n\nexport type Request = boolean | number | Fields\n\nexport interface Variables {\n    [name: string]: {\n        value: any\n        typing: [LinkedType, string]\n    }\n}\n\nexport interface Context {\n    root: LinkedType\n    varCounter: number\n    variables: Variables\n    fragmentCounter: number\n    fragments: string[]\n}\n\nexport interface GraphqlOperation {\n    query: string\n    variables?: { [name: string]: any }\n    operationName?: string\n}\n\nconst parseRequest = (\n    request: Request | undefined,\n    ctx: Context,\n    path: string[],\n): string => {\n    if (typeof request === 'object' && '__args' in request) {\n        const args: any = request.__args\n        let fields: Request | undefined = { ...request }\n        delete fields.__args\n        const argNames = Object.keys(args)\n\n        if (argNames.length === 0) {\n            return parseRequest(fields, ctx, path)\n        }\n\n        const field = getFieldFromPath(ctx.root, path)\n\n        const argStrings = argNames.map((argName) => {\n            ctx.varCounter++\n            const varName = `v${ctx.varCounter}`\n\n            const typing = field.args && field.args[argName] // typeMap used here, .args\n\n            if (!typing) {\n                throw new Error(\n                    `no typing defined for argument \\`${argName}\\` in path \\`${path.join(\n                        '.',\n                    )}\\``,\n                )\n            }\n\n            ctx.variables[varName] = {\n                value: args[argName],\n                typing,\n            }\n\n            return `${argName}:$${varName}`\n        })\n        return `(${argStrings})${parseRequest(fields, ctx, path)}`\n    } else if (typeof request === 'object' && Object.keys(request).length > 0) {\n        const fields = request\n        const fieldNames = Object.keys(fields).filter((k) => Boolean(fields[k]))\n\n        if (fieldNames.length === 0) {\n            throw new Error(\n                `field selection should not be empty: ${path.join('.')}`,\n            )\n        }\n\n        const type =\n            path.length > 0 ? getFieldFromPath(ctx.root, path).type : ctx.root\n        const scalarFields = type.scalar\n\n        let scalarFieldsFragment: string | undefined\n\n        if (fieldNames.includes('__scalar')) {\n            const falsyFieldNames = new Set(\n                Object.keys(fields).filter((k) => !Boolean(fields[k])),\n            )\n            if (scalarFields?.length) {\n                ctx.fragmentCounter++\n                scalarFieldsFragment = `f${ctx.fragmentCounter}`\n\n                ctx.fragments.push(\n                    `fragment ${scalarFieldsFragment} on ${\n                        type.name\n                    }{${scalarFields\n                        .filter((f) => !falsyFieldNames.has(f))\n                        .join(',')}}`,\n                )\n            }\n        }\n\n        const fieldsSelection = fieldNames\n            .filter((f) => !['__scalar', '__name'].includes(f))\n            .map((f) => {\n                const parsed = parseRequest(fields[f], ctx, [...path, f])\n\n                if (f.startsWith('on_')) {\n                    ctx.fragmentCounter++\n                    const implementationFragment = `f${ctx.fragmentCounter}`\n\n                    const typeMatch = f.match(/^on_(.+)/)\n\n                    if (!typeMatch || !typeMatch[1])\n                        throw new Error('match failed')\n\n                    ctx.fragments.push(\n                        `fragment ${implementationFragment} on ${typeMatch[1]}${parsed}`,\n                    )\n\n                    return `...${implementationFragment}`\n                } else {\n                    return `${f}${parsed}`\n                }\n            })\n            .concat(scalarFieldsFragment ? [`...${scalarFieldsFragment}`] : [])\n            .join(',')\n\n        return `{${fieldsSelection}}`\n    } else {\n        return ''\n    }\n}\n\nexport const generateGraphqlOperation = (\n    operation: 'query' | 'mutation' | 'subscription',\n    root: LinkedType,\n    fields?: Fields,\n): GraphqlOperation => {\n    const ctx: Context = {\n        root: root,\n        varCounter: 0,\n        variables: {},\n        fragmentCounter: 0,\n        fragments: [],\n    }\n    const result = parseRequest(fields, ctx, [])\n\n    const varNames = Object.keys(ctx.variables)\n\n    const varsString =\n        varNames.length > 0\n            ? `(${varNames.map((v) => {\n                  const variableType = ctx.variables[v].typing[1]\n                  return `$${v}:${variableType}`\n              })})`\n            : ''\n\n    const operationName = fields?.__name || ''\n\n    return {\n        query: [\n            `${operation} ${operationName}${varsString}${result}`,\n            ...ctx.fragments,\n        ].join(','),\n        variables: Object.keys(ctx.variables).reduce<{ [name: string]: any }>(\n            (r, v) => {\n                r[v] = ctx.variables[v].value\n                return r\n            },\n            {},\n        ),\n        ...(operationName ? { operationName: operationName.toString() } : {}),\n    }\n}\n\nexport const getFieldFromPath = (\n    root: LinkedType | undefined,\n    path: string[],\n) => {\n    let current: LinkedField | undefined\n\n    if (!root) throw new Error('root type is not provided')\n\n    if (path.length === 0) throw new Error(`path is empty`)\n\n    path.forEach((f) => {\n        const type = current ? current.type : root\n\n        if (!type.fields)\n            throw new Error(`type \\`${type.name}\\` does not have fields`)\n\n        const possibleTypes = Object.keys(type.fields)\n            .filter((i) => i.startsWith('on_'))\n            .reduce(\n                (types, fieldName) => {\n                    const field = type.fields && type.fields[fieldName]\n                    if (field) types.push(field.type)\n                    return types\n                },\n                [type],\n            )\n\n        let field: LinkedField | null = null\n\n        possibleTypes.forEach((type) => {\n            const found = type.fields && type.fields[f]\n            if (found) field = found\n        })\n\n        if (!field)\n            throw new Error(\n                `type \\`${type.name}\\` does not have a field \\`${f}\\``,\n            )\n\n        current = field\n    })\n\n    return current as LinkedField\n}\n","// @ts-nocheck\n\nimport  { type BatchOptions, createFetcher } from './fetcher'\nimport type { ExecutionResult, LinkedType } from './types'\nimport {\n    generateGraphqlOperation,\n    type GraphqlOperation,\n} from './generateGraphqlOperation'\n\nexport type Headers =\n    | HeadersInit\n    | (() => HeadersInit)\n    | (() => Promise<HeadersInit>)\n\nexport type BaseFetcher = (\n    operation: GraphqlOperation | GraphqlOperation[],\n) => Promise<ExecutionResult | ExecutionResult[]>\n\nexport type ClientOptions = Omit<RequestInit, 'body' | 'headers'> & {\n    url?: string\n    batch?: BatchOptions | boolean\n    fetcher?: BaseFetcher\n    fetch?: Function\n    headers?: Headers\n}\n\nexport const createClient = ({\n    queryRoot,\n    mutationRoot,\n    subscriptionRoot,\n    ...options\n}: ClientOptions & {\n    queryRoot?: LinkedType\n    mutationRoot?: LinkedType\n    subscriptionRoot?: LinkedType\n}) => {\n    const fetcher = createFetcher(options)\n    const client: {\n        query?: Function\n        mutation?: Function\n    } = {}\n\n    if (queryRoot) {\n        client.query = (request: any) => {\n            if (!queryRoot) throw new Error('queryRoot argument is missing')\n\n            const resultPromise = fetcher(\n                generateGraphqlOperation('query', queryRoot, request),\n            )\n\n            return resultPromise\n        }\n    }\n    if (mutationRoot) {\n        client.mutation = (request: any) => {\n            if (!mutationRoot)\n                throw new Error('mutationRoot argument is missing')\n\n            const resultPromise = fetcher(\n                generateGraphqlOperation('mutation', mutationRoot, request),\n            )\n\n            return resultPromise\n        }\n    }\n\n    return client as any\n}\n","// @ts-nocheck\nimport type {\n    CompressedType,\n    CompressedTypeMap,\n    LinkedArgMap,\n    LinkedField,\n    LinkedType,\n    LinkedTypeMap,\n} from './types'\n\nexport interface PartialLinkedFieldMap {\n    [field: string]: {\n        type: string\n        args?: LinkedArgMap\n    }\n}\n\nexport const linkTypeMap = (\n    typeMap: CompressedTypeMap<number>,\n): LinkedTypeMap => {\n    const indexToName: Record<number, string> = Object.assign(\n        {},\n        ...Object.keys(typeMap.types).map((k, i) => ({ [i]: k })),\n    )\n\n    let intermediaryTypeMap = Object.assign(\n        {},\n        ...Object.keys(typeMap.types || {}).map(\n            (k): Record<string, LinkedType> => {\n                const type: CompressedType = typeMap.types[k]!\n                const fields = type || {}\n                return {\n                    [k]: {\n                        name: k,\n                        // type scalar properties\n                        scalar: Object.keys(fields).filter((f) => {\n                            const [type] = fields[f] || []\n                            return type && typeMap.scalars.includes(type)\n                        }),\n                        // fields with corresponding `type` and `args`\n                        fields: Object.assign(\n                            {},\n                            ...Object.keys(fields).map(\n                                (f): PartialLinkedFieldMap => {\n                                    const [typeIndex, args] = fields[f] || []\n                                    if (typeIndex == null) {\n                                        return {}\n                                    }\n                                    return {\n                                        [f]: {\n                                            // replace index with type name\n                                            type: indexToName[typeIndex],\n                                            args: Object.assign(\n                                                {},\n                                                ...Object.keys(args || {}).map(\n                                                    (k) => {\n                                                        // if argTypeString == argTypeName, argTypeString is missing, need to readd it\n                                                        if (!args || !args[k]) {\n                                                            return\n                                                        }\n                                                        const [\n                                                            argTypeName,\n                                                            argTypeString,\n                                                        ] = args[k] as any\n                                                        return {\n                                                            [k]: [\n                                                                indexToName[\n                                                                    argTypeName\n                                                                ],\n                                                                argTypeString ||\n                                                                    indexToName[\n                                                                        argTypeName\n                                                                    ],\n                                                            ],\n                                                        }\n                                                    },\n                                                ),\n                                            ),\n                                        },\n                                    }\n                                },\n                            ),\n                        ),\n                    },\n                }\n            },\n        ),\n    )\n    const res = resolveConcreteTypes(intermediaryTypeMap)\n    return res\n}\n\n// replace typename with concrete type\nexport const resolveConcreteTypes = (linkedTypeMap: LinkedTypeMap) => {\n    Object.keys(linkedTypeMap).forEach((typeNameFromKey) => {\n        const type: LinkedType = linkedTypeMap[typeNameFromKey]!\n        // type.name = typeNameFromKey\n        if (!type.fields) {\n            return\n        }\n\n        const fields = type.fields\n\n        Object.keys(fields).forEach((f) => {\n            const field: LinkedField = fields[f]!\n\n            if (field.args) {\n                const args = field.args\n                Object.keys(args).forEach((key) => {\n                    const arg = args[key]\n\n                    if (arg) {\n                        const [typeName] = arg\n\n                        if (typeof typeName === 'string') {\n                            if (!linkedTypeMap[typeName]) {\n                                linkedTypeMap[typeName] = { name: typeName }\n                            }\n\n                            arg[0] = linkedTypeMap[typeName]!\n                        }\n                    }\n                })\n            }\n\n            const typeName = field.type as LinkedType | string\n\n            if (typeof typeName === 'string') {\n                if (!linkedTypeMap[typeName]) {\n                    linkedTypeMap[typeName] = { name: typeName }\n                }\n\n                field.type = linkedTypeMap[typeName]!\n            }\n        })\n    })\n\n    return linkedTypeMap\n}\n","export default {\n    \"scalars\": [\n        5,\n        6,\n        7,\n        13,\n        17,\n        19,\n        28,\n        29,\n        43,\n        72,\n        73,\n        74,\n        76,\n        80,\n        81,\n        82,\n        88,\n        90,\n        92,\n        98,\n        107,\n        108,\n        112,\n        122,\n        123,\n        124,\n        125,\n        129\n    ],\n    \"types\": {\n        \"Agency\": {\n            \"agency_email\": [\n                122\n            ],\n            \"agency_fare_url\": [\n                122\n            ],\n            \"agency_id\": [\n                122\n            ],\n            \"agency_lang\": [\n                122\n            ],\n            \"agency_name\": [\n                122\n            ],\n            \"agency_phone\": [\n                122\n            ],\n            \"agency_timezone\": [\n                122\n            ],\n            \"agency_url\": [\n                122\n            ],\n            \"alerts\": [\n                4,\n                {\n                    \"active\": [\n                        7\n                    ],\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"census_geographies\": [\n                10,\n                {\n                    \"layer\": [\n                        122,\n                        \"String!\"\n                    ],\n                    \"limit\": [\n                        74\n                    ],\n                    \"radius\": [\n                        43\n                    ]\n                }\n            ],\n            \"feed_onestop_id\": [\n                122\n            ],\n            \"feed_version\": [\n                32\n            ],\n            \"feed_version_sha1\": [\n                122\n            ],\n            \"geometry\": [\n                92\n            ],\n            \"id\": [\n                74\n            ],\n            \"onestop_id\": [\n                122\n            ],\n            \"operator\": [\n                83\n            ],\n            \"places\": [\n                2,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        3\n                    ]\n                }\n            ],\n            \"routes\": [\n                99,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        101\n                    ]\n                }\n            ],\n            \"search_rank\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"AgencyFilter\": {\n            \"adm0_iso\": [\n                122\n            ],\n            \"adm0_name\": [\n                122\n            ],\n            \"adm1_iso\": [\n                122\n            ],\n            \"adm1_name\": [\n                122\n            ],\n            \"agency_id\": [\n                122\n            ],\n            \"agency_name\": [\n                122\n            ],\n            \"city_name\": [\n                122\n            ],\n            \"feed_onestop_id\": [\n                122\n            ],\n            \"feed_version_sha1\": [\n                122\n            ],\n            \"license\": [\n                79\n            ],\n            \"near\": [\n                91\n            ],\n            \"onestop_id\": [\n                122\n            ],\n            \"search\": [\n                122\n            ],\n            \"within\": [\n                92\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"AgencyPlace\": {\n            \"adm0_iso\": [\n                122\n            ],\n            \"adm0_name\": [\n                122\n            ],\n            \"adm1_iso\": [\n                122\n            ],\n            \"adm1_name\": [\n                122\n            ],\n            \"city_name\": [\n                122\n            ],\n            \"rank\": [\n                43\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"AgencyPlaceFilter\": {\n            \"min_rank\": [\n                43\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Alert\": {\n            \"active_period\": [\n                94\n            ],\n            \"cause\": [\n                122\n            ],\n            \"description_text\": [\n                95\n            ],\n            \"effect\": [\n                122\n            ],\n            \"header_text\": [\n                95\n            ],\n            \"severity_level\": [\n                122\n            ],\n            \"tts_description_text\": [\n                95\n            ],\n            \"tts_header_text\": [\n                95\n            ],\n            \"url\": [\n                95\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Any\": {},\n        \"Bool\": {},\n        \"Boolean\": {},\n        \"Calendar\": {\n            \"added_dates\": [\n                13,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"end_date\": [\n                13\n            ],\n            \"friday\": [\n                74\n            ],\n            \"id\": [\n                74\n            ],\n            \"monday\": [\n                74\n            ],\n            \"removed_dates\": [\n                13,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"saturday\": [\n                74\n            ],\n            \"service_id\": [\n                122\n            ],\n            \"start_date\": [\n                13\n            ],\n            \"sunday\": [\n                74\n            ],\n            \"thursday\": [\n                74\n            ],\n            \"tuesday\": [\n                74\n            ],\n            \"wednesday\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"CalendarDateFilter\": {\n            \"date\": [\n                13\n            ],\n            \"exception_type\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"CensusGeography\": {\n            \"aland\": [\n                43\n            ],\n            \"awater\": [\n                43\n            ],\n            \"geoid\": [\n                122\n            ],\n            \"geometry\": [\n                92\n            ],\n            \"id\": [\n                74\n            ],\n            \"layer_name\": [\n                122\n            ],\n            \"name\": [\n                122\n            ],\n            \"values\": [\n                12,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"table_names\": [\n                        122,\n                        \"[String!]!\"\n                    ]\n                }\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"CensusTable\": {\n            \"id\": [\n                74\n            ],\n            \"table_group\": [\n                122\n            ],\n            \"table_name\": [\n                122\n            ],\n            \"table_title\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"CensusValue\": {\n            \"table\": [\n                11\n            ],\n            \"values\": [\n                5\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Date\": {},\n        \"DirectionRequest\": {\n            \"depart_at\": [\n                125\n            ],\n            \"from\": [\n                135\n            ],\n            \"mode\": [\n                112\n            ],\n            \"to\": [\n                135\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Directions\": {\n            \"data_source\": [\n                122\n            ],\n            \"destination\": [\n                134\n            ],\n            \"distance\": [\n                16\n            ],\n            \"duration\": [\n                18\n            ],\n            \"end_time\": [\n                125\n            ],\n            \"exception\": [\n                122\n            ],\n            \"itineraries\": [\n                75\n            ],\n            \"origin\": [\n                134\n            ],\n            \"start_time\": [\n                125\n            ],\n            \"success\": [\n                7\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Distance\": {\n            \"distance\": [\n                43\n            ],\n            \"units\": [\n                17\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"DistanceUnit\": {},\n        \"Duration\": {\n            \"duration\": [\n                43\n            ],\n            \"units\": [\n                19\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"DurationUnit\": {},\n        \"Feed\": {\n            \"associated_operators\": [\n                83\n            ],\n            \"authorization\": [\n                21\n            ],\n            \"feed_fetches\": [\n                22,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        23\n                    ]\n                }\n            ],\n            \"feed_state\": [\n                30\n            ],\n            \"feed_versions\": [\n                32,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        36\n                    ]\n                }\n            ],\n            \"file\": [\n                122\n            ],\n            \"id\": [\n                74\n            ],\n            \"languages\": [\n                122\n            ],\n            \"license\": [\n                26\n            ],\n            \"name\": [\n                122\n            ],\n            \"onestop_id\": [\n                122\n            ],\n            \"search_rank\": [\n                122\n            ],\n            \"spec\": [\n                29\n            ],\n            \"tags\": [\n                124\n            ],\n            \"urls\": [\n                31\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedAuthorization\": {\n            \"info_url\": [\n                122\n            ],\n            \"param_name\": [\n                122\n            ],\n            \"type\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedFetch\": {\n            \"fetch_error\": [\n                122\n            ],\n            \"fetched_at\": [\n                125\n            ],\n            \"id\": [\n                74\n            ],\n            \"response_code\": [\n                74\n            ],\n            \"response_sha1\": [\n                122\n            ],\n            \"response_size\": [\n                74\n            ],\n            \"success\": [\n                7\n            ],\n            \"url\": [\n                122\n            ],\n            \"url_type\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedFetchFilter\": {\n            \"success\": [\n                7\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedFilter\": {\n            \"fetch_error\": [\n                7\n            ],\n            \"import_status\": [\n                73\n            ],\n            \"license\": [\n                79\n            ],\n            \"onestop_id\": [\n                122\n            ],\n            \"search\": [\n                122\n            ],\n            \"source_url\": [\n                27\n            ],\n            \"spec\": [\n                29\n            ],\n            \"tags\": [\n                124\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedInfo\": {\n            \"default_lang\": [\n                122\n            ],\n            \"feed_contact_email\": [\n                122\n            ],\n            \"feed_contact_url\": [\n                122\n            ],\n            \"feed_end_date\": [\n                13\n            ],\n            \"feed_lang\": [\n                122\n            ],\n            \"feed_publisher_name\": [\n                122\n            ],\n            \"feed_publisher_url\": [\n                122\n            ],\n            \"feed_start_date\": [\n                13\n            ],\n            \"feed_version\": [\n                122\n            ],\n            \"id\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedLicense\": {\n            \"attribution_instructions\": [\n                122\n            ],\n            \"attribution_text\": [\n                122\n            ],\n            \"commercial_use_allowed\": [\n                122\n            ],\n            \"create_derived_product\": [\n                122\n            ],\n            \"redistribution_allowed\": [\n                122\n            ],\n            \"share_alike_optional\": [\n                122\n            ],\n            \"spdx_identifier\": [\n                122\n            ],\n            \"url\": [\n                122\n            ],\n            \"use_without_attribution\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedSourceUrl\": {\n            \"case_sensitive\": [\n                7\n            ],\n            \"type\": [\n                28\n            ],\n            \"url\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedSourceUrlTypes\": {},\n        \"FeedSpecTypes\": {},\n        \"FeedState\": {\n            \"feed_version\": [\n                32\n            ],\n            \"id\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedUrls\": {\n            \"gbfs_auto_discovery\": [\n                122\n            ],\n            \"mds_provider\": [\n                122\n            ],\n            \"realtime_alerts\": [\n                122\n            ],\n            \"realtime_trip_updates\": [\n                122\n            ],\n            \"realtime_vehicle_positions\": [\n                122\n            ],\n            \"static_current\": [\n                122\n            ],\n            \"static_historic\": [\n                122\n            ],\n            \"static_planned\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedVersion\": {\n            \"agencies\": [\n                0,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        1\n                    ]\n                }\n            ],\n            \"created_by\": [\n                122\n            ],\n            \"description\": [\n                122\n            ],\n            \"earliest_calendar_date\": [\n                13\n            ],\n            \"feed\": [\n                20\n            ],\n            \"feed_infos\": [\n                25,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"feed_version_gtfs_import\": [\n                37\n            ],\n            \"fetched_at\": [\n                125\n            ],\n            \"file\": [\n                122\n            ],\n            \"files\": [\n                35,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"geometry\": [\n                92\n            ],\n            \"id\": [\n                74\n            ],\n            \"latest_calendar_date\": [\n                13\n            ],\n            \"name\": [\n                122\n            ],\n            \"routes\": [\n                99,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        101\n                    ]\n                }\n            ],\n            \"service_levels\": [\n                39,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        40\n                    ]\n                }\n            ],\n            \"sha1\": [\n                122\n            ],\n            \"stops\": [\n                113,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        115\n                    ]\n                }\n            ],\n            \"trips\": [\n                126,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        127\n                    ]\n                }\n            ],\n            \"updated_by\": [\n                122\n            ],\n            \"url\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedVersionDeleteResult\": {\n            \"success\": [\n                7\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedVersionFetchResult\": {\n            \"feed_version\": [\n                32\n            ],\n            \"fetch_error\": [\n                122\n            ],\n            \"found_dir_sha1\": [\n                7\n            ],\n            \"found_sha1\": [\n                7\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedVersionFileInfo\": {\n            \"csv_like\": [\n                7\n            ],\n            \"header\": [\n                122\n            ],\n            \"id\": [\n                74\n            ],\n            \"name\": [\n                122\n            ],\n            \"rows\": [\n                74\n            ],\n            \"sha1\": [\n                122\n            ],\n            \"size\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedVersionFilter\": {\n            \"covers\": [\n                109\n            ],\n            \"feed_ids\": [\n                74\n            ],\n            \"feed_onestop_id\": [\n                122\n            ],\n            \"file\": [\n                122\n            ],\n            \"import_status\": [\n                73\n            ],\n            \"sha1\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedVersionGtfsImport\": {\n            \"created_at\": [\n                125\n            ],\n            \"entity_count\": [\n                5\n            ],\n            \"exception_log\": [\n                122\n            ],\n            \"id\": [\n                74\n            ],\n            \"in_progress\": [\n                7\n            ],\n            \"interpolated_stop_time_count\": [\n                74\n            ],\n            \"schedule_removed\": [\n                7\n            ],\n            \"skip_entity_error_count\": [\n                5\n            ],\n            \"skip_entity_filter_count\": [\n                5\n            ],\n            \"skip_entity_marked_count\": [\n                5\n            ],\n            \"skip_entity_reference_count\": [\n                5\n            ],\n            \"success\": [\n                7\n            ],\n            \"updated_at\": [\n                125\n            ],\n            \"warning_count\": [\n                5\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedVersionImportResult\": {\n            \"success\": [\n                7\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedVersionServiceLevel\": {\n            \"end_date\": [\n                13\n            ],\n            \"friday\": [\n                74\n            ],\n            \"id\": [\n                74\n            ],\n            \"monday\": [\n                74\n            ],\n            \"saturday\": [\n                74\n            ],\n            \"start_date\": [\n                13\n            ],\n            \"sunday\": [\n                74\n            ],\n            \"thursday\": [\n                74\n            ],\n            \"tuesday\": [\n                74\n            ],\n            \"wednesday\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedVersionServiceLevelFilter\": {\n            \"end_date\": [\n                13\n            ],\n            \"start_date\": [\n                13\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedVersionSetInput\": {\n            \"description\": [\n                122\n            ],\n            \"name\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"FeedVersionUnimportResult\": {\n            \"success\": [\n                7\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Float\": {},\n        \"Frequency\": {\n            \"end_time\": [\n                108\n            ],\n            \"exact_times\": [\n                74\n            ],\n            \"headway_secs\": [\n                74\n            ],\n            \"id\": [\n                74\n            ],\n            \"start_time\": [\n                108\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsAlertTime\": {\n            \"end\": [\n                74\n            ],\n            \"start\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsBikeRequest\": {\n            \"near\": [\n                91\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsBrandAsset\": {\n            \"brand_image_url\": [\n                122\n            ],\n            \"brand_image_url_dark\": [\n                122\n            ],\n            \"brand_last_modified\": [\n                13\n            ],\n            \"brand_terms_url\": [\n                122\n            ],\n            \"color\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsDockRequest\": {\n            \"near\": [\n                91\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsFeed\": {\n            \"alerts\": [\n                61\n            ],\n            \"calendars\": [\n                62\n            ],\n            \"rental_hours\": [\n                63\n            ],\n            \"station_information\": [\n                59\n            ],\n            \"system_information\": [\n                64\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsFreeBikeStatus\": {\n            \"available_until\": [\n                74\n            ],\n            \"bike_id\": [\n                122\n            ],\n            \"current_fuel_percent\": [\n                43\n            ],\n            \"current_range_meters\": [\n                43\n            ],\n            \"feed\": [\n                49\n            ],\n            \"home_station\": [\n                59\n            ],\n            \"is_disabled\": [\n                6\n            ],\n            \"is_reserved\": [\n                6\n            ],\n            \"last_reported\": [\n                74\n            ],\n            \"lat\": [\n                43\n            ],\n            \"lon\": [\n                43\n            ],\n            \"pricing_plan\": [\n                65\n            ],\n            \"rental_uris\": [\n                58\n            ],\n            \"station\": [\n                59\n            ],\n            \"vehicle_equipment\": [\n                123\n            ],\n            \"vehicle_type\": [\n                70\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsGeofenceFeature\": {\n            \"geometry\": [\n                72\n            ],\n            \"type\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsGeofenceProperty\": {\n            \"end\": [\n                74\n            ],\n            \"name\": [\n                122\n            ],\n            \"rules\": [\n                53\n            ],\n            \"start\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsGeofenceRule\": {\n            \"maximum_speed_kph\": [\n                74\n            ],\n            \"ride_allowed\": [\n                6\n            ],\n            \"ride_through_allowed\": [\n                6\n            ],\n            \"station_parking\": [\n                6\n            ],\n            \"vehicle_type\": [\n                70\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsGeofenceZone\": {\n            \"features\": [\n                51\n            ],\n            \"type\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsPlanPrice\": {\n            \"end\": [\n                74\n            ],\n            \"interval\": [\n                74\n            ],\n            \"rate\": [\n                43\n            ],\n            \"start\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsRentalApp\": {\n            \"discovery_uri\": [\n                122\n            ],\n            \"store_uri\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsRentalApps\": {\n            \"android\": [\n                56\n            ],\n            \"ios\": [\n                56\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsRentalUris\": {\n            \"android\": [\n                122\n            ],\n            \"ios\": [\n                122\n            ],\n            \"web\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsStationInformation\": {\n            \"address\": [\n                122\n            ],\n            \"capacity\": [\n                74\n            ],\n            \"contact_phone\": [\n                122\n            ],\n            \"cross_street\": [\n                122\n            ],\n            \"feed\": [\n                49\n            ],\n            \"is_charging_station\": [\n                6\n            ],\n            \"is_valet_station\": [\n                6\n            ],\n            \"is_virtual_station\": [\n                6\n            ],\n            \"lat\": [\n                43\n            ],\n            \"lon\": [\n                43\n            ],\n            \"name\": [\n                122\n            ],\n            \"parking_hoop\": [\n                74\n            ],\n            \"parking_type\": [\n                122\n            ],\n            \"post_code\": [\n                122\n            ],\n            \"region\": [\n                66\n            ],\n            \"rental_methods\": [\n                123\n            ],\n            \"short_name\": [\n                122\n            ],\n            \"station_area\": [\n                72\n            ],\n            \"station_id\": [\n                122\n            ],\n            \"status\": [\n                60\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsStationStatus\": {\n            \"is_installed\": [\n                6\n            ],\n            \"is_renting\": [\n                6\n            ],\n            \"is_returning\": [\n                6\n            ],\n            \"last_reported\": [\n                74\n            ],\n            \"num_bikes_available\": [\n                74\n            ],\n            \"num_bikes_disabled\": [\n                74\n            ],\n            \"num_docks_available\": [\n                74\n            ],\n            \"num_docks_disabled\": [\n                74\n            ],\n            \"station_id\": [\n                122\n            ],\n            \"vehicle_docks_available\": [\n                69\n            ],\n            \"vehicle_types_available\": [\n                71\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsSystemAlert\": {\n            \"alert_id\": [\n                122\n            ],\n            \"description\": [\n                122\n            ],\n            \"last_updated\": [\n                74\n            ],\n            \"summary\": [\n                122\n            ],\n            \"times\": [\n                45\n            ],\n            \"type\": [\n                122\n            ],\n            \"url\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsSystemCalendar\": {\n            \"end_day\": [\n                74\n            ],\n            \"end_month\": [\n                74\n            ],\n            \"end_year\": [\n                74\n            ],\n            \"start_day\": [\n                74\n            ],\n            \"start_month\": [\n                74\n            ],\n            \"start_year\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsSystemHour\": {\n            \"days\": [\n                123\n            ],\n            \"end_time\": [\n                122\n            ],\n            \"start_time\": [\n                122\n            ],\n            \"user_types\": [\n                123\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsSystemInformation\": {\n            \"brand_assets\": [\n                47\n            ],\n            \"email\": [\n                122\n            ],\n            \"feed_contact_email\": [\n                122\n            ],\n            \"language\": [\n                122\n            ],\n            \"license_url\": [\n                122\n            ],\n            \"name\": [\n                122\n            ],\n            \"operator\": [\n                122\n            ],\n            \"phone_number\": [\n                122\n            ],\n            \"privacy_last_updated\": [\n                13\n            ],\n            \"privacy_url\": [\n                122\n            ],\n            \"purchase_url\": [\n                122\n            ],\n            \"rental_apps\": [\n                57\n            ],\n            \"short_name\": [\n                122\n            ],\n            \"start_date\": [\n                13\n            ],\n            \"system_id\": [\n                122\n            ],\n            \"terms_last_updated\": [\n                13\n            ],\n            \"terms_url\": [\n                122\n            ],\n            \"timezone\": [\n                122\n            ],\n            \"url\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsSystemPricingPlan\": {\n            \"currency\": [\n                122\n            ],\n            \"description\": [\n                122\n            ],\n            \"is_taxable\": [\n                6\n            ],\n            \"name\": [\n                122\n            ],\n            \"per_km_pricing\": [\n                55\n            ],\n            \"per_min_pricing\": [\n                55\n            ],\n            \"plan_id\": [\n                122\n            ],\n            \"price\": [\n                43\n            ],\n            \"surge_pricing\": [\n                6\n            ],\n            \"url\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsSystemRegion\": {\n            \"name\": [\n                122\n            ],\n            \"region_id\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsSystemVersion\": {\n            \"url\": [\n                122\n            ],\n            \"version\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsVehicleAssets\": {\n            \"icon_last_modified\": [\n                13\n            ],\n            \"icon_url\": [\n                122\n            ],\n            \"icon_url_dark\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsVehicleDockAvailable\": {\n            \"count\": [\n                74\n            ],\n            \"vehicle_types\": [\n                70\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsVehicleType\": {\n            \"cargo_load_capacity\": [\n                74\n            ],\n            \"cargo_volume_capacity\": [\n                74\n            ],\n            \"color\": [\n                122\n            ],\n            \"country_code\": [\n                122\n            ],\n            \"default_pricing_plan\": [\n                65\n            ],\n            \"default_reserve_time\": [\n                74\n            ],\n            \"eco_label\": [\n                122\n            ],\n            \"eco_sticker\": [\n                122\n            ],\n            \"form_factor\": [\n                122\n            ],\n            \"gco_2_km\": [\n                74\n            ],\n            \"make\": [\n                122\n            ],\n            \"max_permitted_speed\": [\n                74\n            ],\n            \"max_range_meters\": [\n                43\n            ],\n            \"model\": [\n                122\n            ],\n            \"name\": [\n                122\n            ],\n            \"pricing_plans\": [\n                65\n            ],\n            \"propulsion_type\": [\n                122\n            ],\n            \"rated_power\": [\n                74\n            ],\n            \"rental_uris\": [\n                58\n            ],\n            \"return_constraint\": [\n                122\n            ],\n            \"rider_capacity\": [\n                74\n            ],\n            \"vehicle_accessories\": [\n                123\n            ],\n            \"vehicle_assets\": [\n                68\n            ],\n            \"vehicle_image\": [\n                122\n            ],\n            \"vehicle_type_id\": [\n                122\n            ],\n            \"wheel_count\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"GbfsVehicleTypeAvailable\": {\n            \"count\": [\n                74\n            ],\n            \"num_bikes_disabled\": [\n                74\n            ],\n            \"num_docks_available\": [\n                74\n            ],\n            \"vehicle_type\": [\n                70\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Geometry\": {},\n        \"ImportStatus\": {},\n        \"Int\": {},\n        \"Itinerary\": {\n            \"distance\": [\n                16\n            ],\n            \"duration\": [\n                18\n            ],\n            \"end_time\": [\n                125\n            ],\n            \"from\": [\n                134\n            ],\n            \"legs\": [\n                77\n            ],\n            \"start_time\": [\n                125\n            ],\n            \"to\": [\n                134\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Key\": {},\n        \"Leg\": {\n            \"distance\": [\n                16\n            ],\n            \"duration\": [\n                18\n            ],\n            \"end_time\": [\n                125\n            ],\n            \"from\": [\n                134\n            ],\n            \"geometry\": [\n                81\n            ],\n            \"start_time\": [\n                125\n            ],\n            \"steps\": [\n                111\n            ],\n            \"to\": [\n                134\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Level\": {\n            \"geometry\": [\n                92\n            ],\n            \"id\": [\n                74\n            ],\n            \"level_id\": [\n                122\n            ],\n            \"level_index\": [\n                43\n            ],\n            \"level_name\": [\n                122\n            ],\n            \"stops\": [\n                113\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"LicenseFilter\": {\n            \"commercial_use_allowed\": [\n                80\n            ],\n            \"create_derived_product\": [\n                80\n            ],\n            \"redistribution_allowed\": [\n                80\n            ],\n            \"share_alike_optional\": [\n                80\n            ],\n            \"use_without_attribution\": [\n                80\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"LicenseValue\": {},\n        \"LineString\": {},\n        \"Map\": {},\n        \"Operator\": {\n            \"agencies\": [\n                0\n            ],\n            \"feeds\": [\n                20,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        24\n                    ]\n                }\n            ],\n            \"file\": [\n                122\n            ],\n            \"generated\": [\n                7\n            ],\n            \"id\": [\n                74\n            ],\n            \"name\": [\n                122\n            ],\n            \"onestop_id\": [\n                122\n            ],\n            \"search_rank\": [\n                122\n            ],\n            \"short_name\": [\n                122\n            ],\n            \"tags\": [\n                124\n            ],\n            \"website\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"OperatorFilter\": {\n            \"adm0_iso\": [\n                122\n            ],\n            \"adm0_name\": [\n                122\n            ],\n            \"adm1_iso\": [\n                122\n            ],\n            \"adm1_name\": [\n                122\n            ],\n            \"agency_id\": [\n                122\n            ],\n            \"city_name\": [\n                122\n            ],\n            \"feed_onestop_id\": [\n                122\n            ],\n            \"license\": [\n                79\n            ],\n            \"merged\": [\n                7\n            ],\n            \"onestop_id\": [\n                122\n            ],\n            \"search\": [\n                122\n            ],\n            \"tags\": [\n                124\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Pathway\": {\n            \"from_stop\": [\n                113\n            ],\n            \"id\": [\n                74\n            ],\n            \"is_bidirectional\": [\n                74\n            ],\n            \"length\": [\n                43\n            ],\n            \"max_slope\": [\n                43\n            ],\n            \"min_width\": [\n                43\n            ],\n            \"pathway_id\": [\n                122\n            ],\n            \"pathway_mode\": [\n                74\n            ],\n            \"reverse_signposted_as\": [\n                122\n            ],\n            \"signposted_as\": [\n                122\n            ],\n            \"stair_count\": [\n                74\n            ],\n            \"to_stop\": [\n                113\n            ],\n            \"traversal_time\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"PathwayFilter\": {\n            \"pathway_mode\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Place\": {\n            \"adm0_name\": [\n                122\n            ],\n            \"adm1_name\": [\n                122\n            ],\n            \"city_name\": [\n                122\n            ],\n            \"count\": [\n                74\n            ],\n            \"operators\": [\n                83\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"PlaceAggregationLevel\": {},\n        \"PlaceFilter\": {\n            \"adm0_name\": [\n                122\n            ],\n            \"adm1_name\": [\n                122\n            ],\n            \"city_name\": [\n                122\n            ],\n            \"min_rank\": [\n                43\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Point\": {},\n        \"PointRadius\": {\n            \"lat\": [\n                43\n            ],\n            \"lon\": [\n                43\n            ],\n            \"radius\": [\n                43\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Polygon\": {},\n        \"Query\": {\n            \"agencies\": [\n                0,\n                {\n                    \"after\": [\n                        74\n                    ],\n                    \"ids\": [\n                        74,\n                        \"[Int!]\"\n                    ],\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        1\n                    ]\n                }\n            ],\n            \"bikes\": [\n                50,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        46\n                    ]\n                }\n            ],\n            \"directions\": [\n                15,\n                {\n                    \"where\": [\n                        14,\n                        \"DirectionRequest!\"\n                    ]\n                }\n            ],\n            \"docks\": [\n                59,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        48\n                    ]\n                }\n            ],\n            \"feed_versions\": [\n                32,\n                {\n                    \"after\": [\n                        74\n                    ],\n                    \"ids\": [\n                        74,\n                        \"[Int!]\"\n                    ],\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        36\n                    ]\n                }\n            ],\n            \"feeds\": [\n                20,\n                {\n                    \"after\": [\n                        74\n                    ],\n                    \"ids\": [\n                        74,\n                        \"[Int!]\"\n                    ],\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        24\n                    ]\n                }\n            ],\n            \"operators\": [\n                83,\n                {\n                    \"after\": [\n                        74\n                    ],\n                    \"ids\": [\n                        74,\n                        \"[Int!]\"\n                    ],\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        84\n                    ]\n                }\n            ],\n            \"places\": [\n                87,\n                {\n                    \"after\": [\n                        74\n                    ],\n                    \"level\": [\n                        88\n                    ],\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        89\n                    ]\n                }\n            ],\n            \"routes\": [\n                99,\n                {\n                    \"after\": [\n                        74\n                    ],\n                    \"ids\": [\n                        74,\n                        \"[Int!]\"\n                    ],\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        101\n                    ]\n                }\n            ],\n            \"stops\": [\n                113,\n                {\n                    \"after\": [\n                        74\n                    ],\n                    \"ids\": [\n                        74,\n                        \"[Int!]\"\n                    ],\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        115\n                    ]\n                }\n            ],\n            \"trips\": [\n                126,\n                {\n                    \"after\": [\n                        74\n                    ],\n                    \"ids\": [\n                        74,\n                        \"[Int!]\"\n                    ],\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        127\n                    ]\n                }\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"RTTimeRange\": {\n            \"end\": [\n                74\n            ],\n            \"start\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"RTTranslation\": {\n            \"language\": [\n                122\n            ],\n            \"text\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"RTTripDescriptor\": {\n            \"direction_id\": [\n                74\n            ],\n            \"route_id\": [\n                122\n            ],\n            \"schedule_relationship\": [\n                122\n            ],\n            \"start_date\": [\n                13\n            ],\n            \"start_time\": [\n                108\n            ],\n            \"trip_id\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"RTVehicleDescriptor\": {\n            \"id\": [\n                122\n            ],\n            \"label\": [\n                122\n            ],\n            \"license_plate\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Role\": {},\n        \"Route\": {\n            \"agency\": [\n                0\n            ],\n            \"alerts\": [\n                4,\n                {\n                    \"active\": [\n                        7\n                    ],\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"census_geographies\": [\n                10,\n                {\n                    \"layer\": [\n                        122,\n                        \"String!\"\n                    ],\n                    \"limit\": [\n                        74\n                    ],\n                    \"radius\": [\n                        43\n                    ]\n                }\n            ],\n            \"continuous_drop_off\": [\n                74\n            ],\n            \"continuous_pickup\": [\n                74\n            ],\n            \"feed_onestop_id\": [\n                122\n            ],\n            \"feed_version\": [\n                32\n            ],\n            \"feed_version_sha1\": [\n                122\n            ],\n            \"geometries\": [\n                102,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"geometry\": [\n                72\n            ],\n            \"headways\": [\n                103,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"id\": [\n                74\n            ],\n            \"onestop_id\": [\n                122\n            ],\n            \"patterns\": [\n                106\n            ],\n            \"route_attribute\": [\n                100\n            ],\n            \"route_color\": [\n                122\n            ],\n            \"route_desc\": [\n                122\n            ],\n            \"route_id\": [\n                122\n            ],\n            \"route_long_name\": [\n                122\n            ],\n            \"route_short_name\": [\n                122\n            ],\n            \"route_sort_order\": [\n                74\n            ],\n            \"route_stop_buffer\": [\n                105,\n                {\n                    \"radius\": [\n                        43\n                    ]\n                }\n            ],\n            \"route_stops\": [\n                104,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"route_text_color\": [\n                122\n            ],\n            \"route_type\": [\n                74\n            ],\n            \"route_url\": [\n                122\n            ],\n            \"search_rank\": [\n                122\n            ],\n            \"stops\": [\n                113,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        115\n                    ]\n                }\n            ],\n            \"trips\": [\n                126,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        127\n                    ]\n                }\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"RouteAttribute\": {\n            \"category\": [\n                74\n            ],\n            \"running_way\": [\n                74\n            ],\n            \"subcategory\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"RouteFilter\": {\n            \"agency_ids\": [\n                74\n            ],\n            \"allow_previous_onestop_ids\": [\n                7\n            ],\n            \"feed_onestop_id\": [\n                122\n            ],\n            \"feed_version_sha1\": [\n                122\n            ],\n            \"license\": [\n                79\n            ],\n            \"near\": [\n                91\n            ],\n            \"onestop_id\": [\n                122\n            ],\n            \"onestop_ids\": [\n                122\n            ],\n            \"operator_onestop_id\": [\n                122\n            ],\n            \"route_id\": [\n                122\n            ],\n            \"route_type\": [\n                74\n            ],\n            \"search\": [\n                122\n            ],\n            \"serviced\": [\n                7\n            ],\n            \"within\": [\n                92\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"RouteGeometry\": {\n            \"combined_geometry\": [\n                72\n            ],\n            \"first_point_max_distance\": [\n                43\n            ],\n            \"generated\": [\n                7\n            ],\n            \"geometry\": [\n                81\n            ],\n            \"length\": [\n                43\n            ],\n            \"max_segment_length\": [\n                43\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"RouteHeadway\": {\n            \"departures\": [\n                108\n            ],\n            \"direction_id\": [\n                74\n            ],\n            \"dow_category\": [\n                74\n            ],\n            \"headway_secs\": [\n                74\n            ],\n            \"service_date\": [\n                13\n            ],\n            \"stop\": [\n                113\n            ],\n            \"stop_trip_count\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"RouteStop\": {\n            \"agency\": [\n                0\n            ],\n            \"agency_id\": [\n                74\n            ],\n            \"id\": [\n                74\n            ],\n            \"route\": [\n                99\n            ],\n            \"route_id\": [\n                74\n            ],\n            \"stop\": [\n                113\n            ],\n            \"stop_id\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"RouteStopBuffer\": {\n            \"stop_buffer\": [\n                72\n            ],\n            \"stop_convexhull\": [\n                92\n            ],\n            \"stop_points\": [\n                72\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"RouteStopPattern\": {\n            \"count\": [\n                74\n            ],\n            \"direction_id\": [\n                74\n            ],\n            \"stop_pattern_id\": [\n                74\n            ],\n            \"trips\": [\n                126,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"ScheduleRelationship\": {},\n        \"Seconds\": {},\n        \"ServiceCoversFilter\": {\n            \"end_date\": [\n                13\n            ],\n            \"fetched_after\": [\n                125\n            ],\n            \"fetched_before\": [\n                125\n            ],\n            \"start_date\": [\n                13\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Shape\": {\n            \"generated\": [\n                7\n            ],\n            \"geometry\": [\n                81\n            ],\n            \"id\": [\n                74\n            ],\n            \"shape_id\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Step\": {\n            \"distance\": [\n                16\n            ],\n            \"duration\": [\n                18\n            ],\n            \"end_time\": [\n                125\n            ],\n            \"geometry_offset\": [\n                74\n            ],\n            \"instruction\": [\n                122\n            ],\n            \"mode\": [\n                112\n            ],\n            \"start_time\": [\n                125\n            ],\n            \"to\": [\n                134\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"StepMode\": {},\n        \"Stop\": {\n            \"alerts\": [\n                4,\n                {\n                    \"active\": [\n                        7\n                    ],\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"arrivals\": [\n                119,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        121\n                    ]\n                }\n            ],\n            \"census_geographies\": [\n                10,\n                {\n                    \"layer\": [\n                        122,\n                        \"String!\"\n                    ],\n                    \"limit\": [\n                        74\n                    ],\n                    \"radius\": [\n                        43\n                    ]\n                }\n            ],\n            \"children\": [\n                113,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"departures\": [\n                119,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        121\n                    ]\n                }\n            ],\n            \"directions\": [\n                15,\n                {\n                    \"depart_at\": [\n                        125\n                    ],\n                    \"from\": [\n                        135\n                    ],\n                    \"mode\": [\n                        112\n                    ],\n                    \"to\": [\n                        135\n                    ]\n                }\n            ],\n            \"external_reference\": [\n                114\n            ],\n            \"feed_onestop_id\": [\n                122\n            ],\n            \"feed_version\": [\n                32\n            ],\n            \"feed_version_sha1\": [\n                122\n            ],\n            \"geometry\": [\n                90\n            ],\n            \"id\": [\n                74\n            ],\n            \"level\": [\n                78\n            ],\n            \"location_type\": [\n                74\n            ],\n            \"nearby_stops\": [\n                113,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"radius\": [\n                        43\n                    ]\n                }\n            ],\n            \"observations\": [\n                116,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        117\n                    ]\n                }\n            ],\n            \"onestop_id\": [\n                122\n            ],\n            \"parent\": [\n                113\n            ],\n            \"pathways_from_stop\": [\n                85,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"pathways_to_stop\": [\n                85,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"place\": [\n                118\n            ],\n            \"platform_code\": [\n                122\n            ],\n            \"route_stops\": [\n                104,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"search_rank\": [\n                122\n            ],\n            \"stop_code\": [\n                122\n            ],\n            \"stop_desc\": [\n                122\n            ],\n            \"stop_id\": [\n                122\n            ],\n            \"stop_name\": [\n                122\n            ],\n            \"stop_times\": [\n                119,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        121\n                    ]\n                }\n            ],\n            \"stop_timezone\": [\n                122\n            ],\n            \"stop_url\": [\n                122\n            ],\n            \"tts_stop_name\": [\n                122\n            ],\n            \"wheelchair_boarding\": [\n                74\n            ],\n            \"zone_id\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"StopExternalReference\": {\n            \"id\": [\n                74\n            ],\n            \"inactive\": [\n                7\n            ],\n            \"target_active_stop\": [\n                113\n            ],\n            \"target_feed_onestop_id\": [\n                122\n            ],\n            \"target_stop_id\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"StopFilter\": {\n            \"agency_ids\": [\n                74\n            ],\n            \"allow_previous_onestop_ids\": [\n                7\n            ],\n            \"feed_onestop_id\": [\n                122\n            ],\n            \"feed_version_sha1\": [\n                122\n            ],\n            \"license\": [\n                79\n            ],\n            \"location_type\": [\n                74\n            ],\n            \"near\": [\n                91\n            ],\n            \"onestop_id\": [\n                122\n            ],\n            \"onestop_ids\": [\n                122\n            ],\n            \"search\": [\n                122\n            ],\n            \"served_by_onestop_ids\": [\n                122\n            ],\n            \"serviced\": [\n                7\n            ],\n            \"stop_code\": [\n                122\n            ],\n            \"stop_id\": [\n                122\n            ],\n            \"within\": [\n                92\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"StopObservation\": {\n            \"agency_id\": [\n                122\n            ],\n            \"from_stop_id\": [\n                122\n            ],\n            \"observed_arrival_time\": [\n                108\n            ],\n            \"observed_departure_time\": [\n                108\n            ],\n            \"route_id\": [\n                122\n            ],\n            \"schedule_relationship\": [\n                122\n            ],\n            \"scheduled_arrival_time\": [\n                108\n            ],\n            \"scheduled_departure_time\": [\n                108\n            ],\n            \"source\": [\n                122\n            ],\n            \"stop_sequence\": [\n                74\n            ],\n            \"to_stop_id\": [\n                122\n            ],\n            \"trip_id\": [\n                122\n            ],\n            \"trip_start_date\": [\n                13\n            ],\n            \"trip_start_time\": [\n                108\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"StopObservationFilter\": {\n            \"feed_version_id\": [\n                74\n            ],\n            \"source\": [\n                122\n            ],\n            \"trip_start_date\": [\n                13\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"StopPlace\": {\n            \"adm0_iso\": [\n                122\n            ],\n            \"adm0_name\": [\n                122\n            ],\n            \"adm1_iso\": [\n                122\n            ],\n            \"adm1_name\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"StopTime\": {\n            \"arrival\": [\n                120\n            ],\n            \"arrival_time\": [\n                108\n            ],\n            \"continuous_drop_off\": [\n                74\n            ],\n            \"continuous_pickup\": [\n                74\n            ],\n            \"departure\": [\n                120\n            ],\n            \"departure_time\": [\n                108\n            ],\n            \"drop_off_type\": [\n                74\n            ],\n            \"interpolated\": [\n                74\n            ],\n            \"pickup_type\": [\n                74\n            ],\n            \"service_date\": [\n                13\n            ],\n            \"shape_dist_traveled\": [\n                43\n            ],\n            \"stop\": [\n                113\n            ],\n            \"stop_headsign\": [\n                122\n            ],\n            \"stop_sequence\": [\n                74\n            ],\n            \"timepoint\": [\n                74\n            ],\n            \"trip\": [\n                126\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"StopTimeEvent\": {\n            \"delay\": [\n                74\n            ],\n            \"estimated\": [\n                108\n            ],\n            \"estimated_utc\": [\n                125\n            ],\n            \"scheduled\": [\n                108\n            ],\n            \"stop_timezone\": [\n                122\n            ],\n            \"uncertainty\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"StopTimeFilter\": {\n            \"allow_previous_route_onestop_ids\": [\n                7\n            ],\n            \"end\": [\n                108\n            ],\n            \"end_time\": [\n                74\n            ],\n            \"exclude_first\": [\n                7\n            ],\n            \"exclude_last\": [\n                7\n            ],\n            \"next\": [\n                74\n            ],\n            \"route_onestop_ids\": [\n                122\n            ],\n            \"service_date\": [\n                13\n            ],\n            \"start\": [\n                108\n            ],\n            \"start_time\": [\n                74\n            ],\n            \"use_service_window\": [\n                7\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"String\": {},\n        \"Strings\": {},\n        \"Tags\": {},\n        \"Time\": {},\n        \"Trip\": {\n            \"alerts\": [\n                4,\n                {\n                    \"active\": [\n                        7\n                    ],\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"bikes_allowed\": [\n                74\n            ],\n            \"block_id\": [\n                122\n            ],\n            \"calendar\": [\n                8\n            ],\n            \"direction_id\": [\n                74\n            ],\n            \"feed_version\": [\n                32\n            ],\n            \"frequencies\": [\n                44,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"id\": [\n                74\n            ],\n            \"route\": [\n                99\n            ],\n            \"schedule_relationship\": [\n                107\n            ],\n            \"shape\": [\n                110\n            ],\n            \"stop_pattern_id\": [\n                74\n            ],\n            \"stop_times\": [\n                119,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"where\": [\n                        128\n                    ]\n                }\n            ],\n            \"timestamp\": [\n                125\n            ],\n            \"trip_headsign\": [\n                122\n            ],\n            \"trip_id\": [\n                122\n            ],\n            \"trip_short_name\": [\n                122\n            ],\n            \"wheelchair_accessible\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"TripFilter\": {\n            \"feed_onestop_id\": [\n                122\n            ],\n            \"feed_version_sha1\": [\n                122\n            ],\n            \"license\": [\n                79\n            ],\n            \"route_ids\": [\n                74\n            ],\n            \"route_onestop_ids\": [\n                122\n            ],\n            \"service_date\": [\n                13\n            ],\n            \"stop_pattern_id\": [\n                74\n            ],\n            \"trip_id\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"TripStopTimeFilter\": {\n            \"end\": [\n                108\n            ],\n            \"start\": [\n                108\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Upload\": {},\n        \"ValidationResult\": {\n            \"agencies\": [\n                0,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"earliest_calendar_date\": [\n                13\n            ],\n            \"errors\": [\n                132\n            ],\n            \"failure_reason\": [\n                122\n            ],\n            \"feed_infos\": [\n                25,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"files\": [\n                35\n            ],\n            \"latest_calendar_date\": [\n                13\n            ],\n            \"routes\": [\n                99,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"service_levels\": [\n                39,\n                {\n                    \"limit\": [\n                        74\n                    ],\n                    \"route_id\": [\n                        122\n                    ]\n                }\n            ],\n            \"sha1\": [\n                122\n            ],\n            \"stops\": [\n                113,\n                {\n                    \"limit\": [\n                        74\n                    ]\n                }\n            ],\n            \"success\": [\n                7\n            ],\n            \"warnings\": [\n                132\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"ValidationResultError\": {\n            \"entity_id\": [\n                122\n            ],\n            \"error_type\": [\n                122\n            ],\n            \"field\": [\n                122\n            ],\n            \"filename\": [\n                122\n            ],\n            \"message\": [\n                122\n            ],\n            \"value\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"ValidationResultErrorGroup\": {\n            \"count\": [\n                74\n            ],\n            \"error_type\": [\n                122\n            ],\n            \"errors\": [\n                131\n            ],\n            \"filename\": [\n                122\n            ],\n            \"limit\": [\n                74\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"VehiclePosition\": {\n            \"congestion_level\": [\n                122\n            ],\n            \"current_status\": [\n                122\n            ],\n            \"current_stop_sequence\": [\n                74\n            ],\n            \"position\": [\n                90\n            ],\n            \"stop_id\": [\n                113\n            ],\n            \"timestamp\": [\n                125\n            ],\n            \"vehicle\": [\n                97\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"Waypoint\": {\n            \"lat\": [\n                43\n            ],\n            \"lon\": [\n                43\n            ],\n            \"name\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        },\n        \"WaypointInput\": {\n            \"lat\": [\n                43\n            ],\n            \"lon\": [\n                43\n            ],\n            \"name\": [\n                122\n            ],\n            \"__typename\": [\n                122\n            ]\n        }\n    }\n}","// @ts-nocheck\nexport type Scalars = {\n    Any: any,\n    Bool: any,\n    Boolean: boolean,\n    Date: string,\n    Float: number,\n    Geometry: GeoJSON.Geometry,\n    Int: number,\n    Key: any,\n    LineString: GeoJSON.LineString,\n    Map: any,\n    Point: GeoJSON.Point,\n    Polygon: GeoJSON.Polygon,\n    Seconds: string,\n    String: string,\n    Strings: any,\n    Tags: {[k: string]: string},\n    Time: string,\n    Upload: any,\n}\n\n\n/** See https://gtfs.org/schedule/reference/#agencytxt */\nexport interface Agency {\n    agency_email: Scalars['String']\n    agency_fare_url: Scalars['String']\n    agency_id: Scalars['String']\n    agency_lang: Scalars['String']\n    agency_name: Scalars['String']\n    agency_phone: Scalars['String']\n    agency_timezone: Scalars['String']\n    agency_url: Scalars['String']\n    alerts?: Alert[]\n    census_geographies?: CensusGeography[]\n    feed_onestop_id?: Scalars['String']\n    feed_version: FeedVersion\n    feed_version_sha1?: Scalars['String']\n    geometry?: Scalars['Polygon']\n    id: Scalars['Int']\n    onestop_id: Scalars['String']\n    operator?: Operator\n    places?: AgencyPlace[]\n    routes: Route[]\n    search_rank?: Scalars['String']\n    __typename: 'Agency'\n}\n\nexport interface AgencyPlace {\n    adm0_iso?: Scalars['String']\n    adm0_name?: Scalars['String']\n    adm1_iso?: Scalars['String']\n    adm1_name?: Scalars['String']\n    city_name?: Scalars['String']\n    rank?: Scalars['Float']\n    __typename: 'AgencyPlace'\n}\n\n\n/** [Alert](https://gtfs.org/reference/realtime/v2/#message-alert) message, also called a service alert, provided by a source GTFS Realtime feed. */\nexport interface Alert {\n    active_period?: RTTimeRange[]\n    cause?: Scalars['String']\n    description_text: RTTranslation[]\n    effect?: Scalars['String']\n    header_text: RTTranslation[]\n    severity_level?: Scalars['String']\n    tts_description_text?: RTTranslation[]\n    tts_header_text?: RTTranslation[]\n    url?: RTTranslation[]\n    __typename: 'Alert'\n}\n\n\n/** Record from a static GTFS [calendars.txt](https://gtfs.org/schedule/reference/#calendarstxt) file. */\nexport interface Calendar {\n    added_dates: Scalars['Date'][]\n    end_date: Scalars['Date']\n    friday: Scalars['Int']\n    id: Scalars['Int']\n    monday: Scalars['Int']\n    removed_dates: Scalars['Date'][]\n    saturday: Scalars['Int']\n    service_id: Scalars['String']\n    start_date: Scalars['Date']\n    sunday: Scalars['Int']\n    thursday: Scalars['Int']\n    tuesday: Scalars['Int']\n    wednesday: Scalars['Int']\n    __typename: 'Calendar'\n}\n\nexport interface CensusGeography {\n    aland?: Scalars['Float']\n    awater?: Scalars['Float']\n    geoid?: Scalars['String']\n    geometry?: Scalars['Polygon']\n    id: Scalars['Int']\n    layer_name: Scalars['String']\n    name?: Scalars['String']\n    values: (CensusValue | undefined)[]\n    __typename: 'CensusGeography'\n}\n\nexport interface CensusTable {\n    id: Scalars['Int']\n    table_group: Scalars['String']\n    table_name: Scalars['String']\n    table_title: Scalars['String']\n    __typename: 'CensusTable'\n}\n\nexport interface CensusValue {\n    table: CensusTable\n    values: Scalars['Any']\n    __typename: 'CensusValue'\n}\n\nexport interface Directions {\n    data_source?: Scalars['String']\n    destination?: Waypoint\n    distance?: Distance\n    duration?: Duration\n    end_time?: Scalars['Time']\n    exception?: Scalars['String']\n    itineraries?: Itinerary[]\n    origin?: Waypoint\n    start_time?: Scalars['Time']\n    success: Scalars['Boolean']\n    __typename: 'Directions'\n}\n\nexport interface Distance {\n    distance: Scalars['Float']\n    units: DistanceUnit\n    __typename: 'Distance'\n}\n\nexport type DistanceUnit = 'KILOMETERS' | 'MILES'\n\nexport interface Duration {\n    duration: Scalars['Float']\n    units: DurationUnit\n    __typename: 'Duration'\n}\n\nexport type DurationUnit = 'SECONDS'\n\n\n/** Feeds contain details on how to access transit information, including URLs to data sources in various formats (GTFS, GTFS-RT, GBFS, etc), license information, related feeds, details on how to make authorized requests, and feed version archives. Feed versions are archived (as `.zip` files) and imported into the Transitland database for querying agencies, stops, routes, trips, etc. */\nexport interface Feed {\n    associated_operators?: Operator[]\n    authorization?: FeedAuthorization\n    feed_fetches?: FeedFetch[]\n    feed_state?: FeedState\n    /** Versions of this feed that have been fetched, archived, and imported by Transitland */\n    feed_versions: FeedVersion[]\n    file: Scalars['String']\n    /** Unique integer ID */\n    id: Scalars['Int']\n    /** Language(s) included in this feed */\n    languages?: Scalars['String'][]\n    license?: FeedLicense\n    /** A common name for this feed. Optional. Alternatively use `associated_operators[].name` */\n    name?: Scalars['String']\n    /** Onestop ID for this feed */\n    onestop_id: Scalars['String']\n    search_rank?: Scalars['String']\n    spec?: FeedSpecTypes\n    tags?: Scalars['Tags']\n    urls?: FeedUrls\n    __typename: 'Feed'\n}\n\n\n/** Details on how to construct an HTTP request to access a protected resource */\nexport interface FeedAuthorization {\n    /** Website to visit to sign up for an account */\n    info_url: Scalars['String']\n    /** When `type=query_param`, this specifies the name of the query parameter. When `type=header`, this specifies the name of the header */\n    param_name: Scalars['String']\n    /** Method for inserting authorization secret into request */\n    type: Scalars['String']\n    __typename: 'FeedAuthorization'\n}\n\nexport interface FeedFetch {\n    fetch_error?: Scalars['String']\n    fetched_at?: Scalars['Time']\n    id: Scalars['Int']\n    response_code?: Scalars['Int']\n    response_sha1?: Scalars['String']\n    response_size?: Scalars['Int']\n    success?: Scalars['Boolean']\n    url?: Scalars['String']\n    url_type?: Scalars['String']\n    __typename: 'FeedFetch'\n}\n\n\n/** Record from a static GTFS [feed_info.txt](https://gtfs.org/schedule/reference/#feed_infotxt) file. */\nexport interface FeedInfo {\n    default_lang?: Scalars['String']\n    feed_contact_email?: Scalars['String']\n    feed_contact_url?: Scalars['String']\n    feed_end_date?: Scalars['Date']\n    feed_lang: Scalars['String']\n    feed_publisher_name: Scalars['String']\n    feed_publisher_url: Scalars['String']\n    feed_start_date?: Scalars['Date']\n    feed_version: Scalars['String']\n    id: Scalars['Int']\n    __typename: 'FeedInfo'\n}\n\n\n/** License information for this feed, curated by Interline and contributors to the Transitland Atlas feed registry. Note that this does not constitute legal advice. Users are advised to review and confirm any terms and conditions attached to a source feed. */\nexport interface FeedLicense {\n    /** Feed consumers must follow these instructions for how to provide attribution */\n    attribution_instructions: Scalars['String']\n    /** Feed consumers must include this particular text when using this feed */\n    attribution_text: Scalars['String']\n    /** Are feed consumers allowed to use the feed for commercial purposes? */\n    commercial_use_allowed: Scalars['String']\n    /** Are feed consumers allowed to create and share derived products from the feed? */\n    create_derived_product: Scalars['String']\n    /** Are feed consumers allowed to redistribute the feed in its entirety? */\n    redistribution_allowed: Scalars['String']\n    /** Are feed consumers allowed to keep their modifications of this feed private? */\n    share_alike_optional: Scalars['String']\n    /** SPDX identifier for a common license. See https://spdx.org/licenses/ */\n    spdx_identifier: Scalars['String']\n    /** URL for a custom license */\n    url: Scalars['String']\n    /** Are feed consumers allowed to use the feed contents without including attribution text in their app or map? */\n    use_without_attribution: Scalars['String']\n    __typename: 'FeedLicense'\n}\n\nexport type FeedSourceUrlTypes = 'gbfs_auto_discovery' | 'mds_provider' | 'realtime_alerts' | 'realtime_trip_updates' | 'realtime_vehicle_positions' | 'static_current' | 'static_historic' | 'static_hypothetical' | 'static_planned'\n\n\n/** Type of data contained in a source feed */\nexport type FeedSpecTypes = 'GBFS' | 'GTFS' | 'GTFS_RT' | 'MDS'\n\n\n/** Details on the current state of this feed, such as active version, last fetch time, etc. */\nexport interface FeedState {\n    /** The active feed version for this feed */\n    feed_version?: FeedVersion\n    id: Scalars['Int']\n    __typename: 'FeedState'\n}\n\n\n/** URL(s) from which Transitland sources a feed */\nexport interface FeedUrls {\n    /** URL for GBFS feed `gbfs.json` auto-discovery file */\n    gbfs_auto_discovery: Scalars['String']\n    /** URL for MDS feed provider endpoint */\n    mds_provider: Scalars['String']\n    /** URL for GTFS Realtime Alert messages */\n    realtime_alerts: Scalars['String']\n    /** URL for GTFS Realtime TripUpdate messages */\n    realtime_trip_updates: Scalars['String']\n    /** URL for GTFS Realtime VehiclePosition messages */\n    realtime_vehicle_positions: Scalars['String']\n    /** URL for the static feed that represents today's service */\n    static_current: Scalars['String']\n    /** URLs for static feeds that represent past service that is no longer in effect  */\n    static_historic: Scalars['String'][]\n    /** URLs for static feeds that represent service planned for upcoming dates. Typically used to represent calendar/service changes that will take effect few weeks or months in the future */\n    static_planned: Scalars['String']\n    __typename: 'FeedUrls'\n}\n\n\n/** Feed versions represent a specific static GTFS file that was published at a particular point in time, and are generally accessed and referenced using the [SHA1 checksum](https://en.wikipedia.org/wiki/SHA-1) of the GTFS archive. */\nexport interface FeedVersion {\n    agencies: Agency[]\n    created_by?: Scalars['String']\n    description?: Scalars['String']\n    earliest_calendar_date: Scalars['Date']\n    feed: Feed\n    feed_infos: FeedInfo[]\n    feed_version_gtfs_import?: FeedVersionGtfsImport\n    fetched_at: Scalars['Time']\n    file?: Scalars['String']\n    /** Metadata for each text file present in the main directory of the zip archive  */\n    files: FeedVersionFileInfo[]\n    /** Convex hull around all active stops in the feed version */\n    geometry?: Scalars['Polygon']\n    id: Scalars['Int']\n    latest_calendar_date: Scalars['Date']\n    name?: Scalars['String']\n    routes: Route[]\n    service_levels: FeedVersionServiceLevel[]\n    sha1: Scalars['String']\n    stops: Stop[]\n    trips: Trip[]\n    updated_by?: Scalars['String']\n    url: Scalars['String']\n    __typename: 'FeedVersion'\n}\n\nexport interface FeedVersionDeleteResult {\n    success: Scalars['Boolean']\n    __typename: 'FeedVersionDeleteResult'\n}\n\nexport interface FeedVersionFetchResult {\n    feed_version?: FeedVersion\n    fetch_error?: Scalars['String']\n    found_dir_sha1: Scalars['Boolean']\n    found_sha1: Scalars['Boolean']\n    __typename: 'FeedVersionFetchResult'\n}\n\nexport interface FeedVersionFileInfo {\n    csv_like: Scalars['Boolean']\n    header: Scalars['String']\n    id: Scalars['Int']\n    name: Scalars['String']\n    rows: Scalars['Int']\n    sha1: Scalars['String']\n    size: Scalars['Int']\n    __typename: 'FeedVersionFileInfo'\n}\n\nexport interface FeedVersionGtfsImport {\n    created_at?: Scalars['Time']\n    entity_count?: Scalars['Any']\n    exception_log: Scalars['String']\n    id: Scalars['Int']\n    in_progress: Scalars['Boolean']\n    interpolated_stop_time_count?: Scalars['Int']\n    schedule_removed: Scalars['Boolean']\n    skip_entity_error_count?: Scalars['Any']\n    skip_entity_filter_count?: Scalars['Any']\n    skip_entity_marked_count?: Scalars['Any']\n    skip_entity_reference_count?: Scalars['Any']\n    success: Scalars['Boolean']\n    updated_at?: Scalars['Time']\n    warning_count?: Scalars['Any']\n    __typename: 'FeedVersionGtfsImport'\n}\n\nexport interface FeedVersionImportResult {\n    success: Scalars['Boolean']\n    __typename: 'FeedVersionImportResult'\n}\n\nexport interface FeedVersionServiceLevel {\n    end_date: Scalars['Date']\n    friday: Scalars['Int']\n    id: Scalars['Int']\n    monday: Scalars['Int']\n    saturday: Scalars['Int']\n    start_date: Scalars['Date']\n    sunday: Scalars['Int']\n    thursday: Scalars['Int']\n    tuesday: Scalars['Int']\n    wednesday: Scalars['Int']\n    __typename: 'FeedVersionServiceLevel'\n}\n\nexport interface FeedVersionUnimportResult {\n    success: Scalars['Boolean']\n    __typename: 'FeedVersionUnimportResult'\n}\n\n\n/** Record from a static GTFS [frequencies.txt](https://gtfs.org/schedule/reference/#frequenciestxt) file. */\nexport interface Frequency {\n    end_time: Scalars['Seconds']\n    exact_times: Scalars['Int']\n    headway_secs: Scalars['Int']\n    id: Scalars['Int']\n    start_time: Scalars['Seconds']\n    __typename: 'Frequency'\n}\n\nexport interface GbfsAlertTime {\n    end?: Scalars['Int']\n    start?: Scalars['Int']\n    __typename: 'GbfsAlertTime'\n}\n\nexport interface GbfsBrandAsset {\n    brand_image_url?: Scalars['String']\n    brand_image_url_dark?: Scalars['String']\n    brand_last_modified?: Scalars['Date']\n    brand_terms_url?: Scalars['String']\n    color?: Scalars['String']\n    __typename: 'GbfsBrandAsset'\n}\n\nexport interface GbfsFeed {\n    alerts?: GbfsSystemAlert[]\n    calendars?: GbfsSystemCalendar[]\n    rental_hours?: GbfsSystemHour[]\n    station_information?: GbfsStationInformation[]\n    system_information?: GbfsSystemInformation\n    __typename: 'GbfsFeed'\n}\n\nexport interface GbfsFreeBikeStatus {\n    available_until?: Scalars['Int']\n    bike_id?: Scalars['String']\n    current_fuel_percent?: Scalars['Float']\n    current_range_meters?: Scalars['Float']\n    feed?: GbfsFeed\n    home_station?: GbfsStationInformation\n    is_disabled?: Scalars['Bool']\n    is_reserved?: Scalars['Bool']\n    last_reported?: Scalars['Int']\n    lat?: Scalars['Float']\n    lon?: Scalars['Float']\n    pricing_plan?: GbfsSystemPricingPlan\n    rental_uris?: GbfsRentalUris\n    station?: GbfsStationInformation\n    vehicle_equipment?: Scalars['Strings']\n    vehicle_type?: GbfsVehicleType\n    __typename: 'GbfsFreeBikeStatus'\n}\n\nexport interface GbfsGeofenceFeature {\n    geometry?: Scalars['Geometry']\n    type?: Scalars['String']\n    __typename: 'GbfsGeofenceFeature'\n}\n\nexport interface GbfsGeofenceProperty {\n    end?: Scalars['Int']\n    name?: Scalars['String']\n    rules?: (GbfsGeofenceRule | undefined)[]\n    start?: Scalars['Int']\n    __typename: 'GbfsGeofenceProperty'\n}\n\nexport interface GbfsGeofenceRule {\n    maximum_speed_kph?: Scalars['Int']\n    ride_allowed?: Scalars['Bool']\n    ride_through_allowed?: Scalars['Bool']\n    station_parking?: Scalars['Bool']\n    vehicle_type?: GbfsVehicleType\n    __typename: 'GbfsGeofenceRule'\n}\n\nexport interface GbfsGeofenceZone {\n    features?: GbfsGeofenceFeature[]\n    type?: Scalars['String']\n    __typename: 'GbfsGeofenceZone'\n}\n\nexport interface GbfsPlanPrice {\n    end?: Scalars['Int']\n    interval?: Scalars['Int']\n    rate?: Scalars['Float']\n    start?: Scalars['Int']\n    __typename: 'GbfsPlanPrice'\n}\n\nexport interface GbfsRentalApp {\n    discovery_uri?: Scalars['String']\n    store_uri?: Scalars['String']\n    __typename: 'GbfsRentalApp'\n}\n\nexport interface GbfsRentalApps {\n    android?: GbfsRentalApp\n    ios?: GbfsRentalApp\n    __typename: 'GbfsRentalApps'\n}\n\nexport interface GbfsRentalUris {\n    android?: Scalars['String']\n    ios?: Scalars['String']\n    web?: Scalars['String']\n    __typename: 'GbfsRentalUris'\n}\n\nexport interface GbfsStationInformation {\n    address?: Scalars['String']\n    capacity?: Scalars['Int']\n    contact_phone?: Scalars['String']\n    cross_street?: Scalars['String']\n    feed?: GbfsFeed\n    is_charging_station?: Scalars['Bool']\n    is_valet_station?: Scalars['Bool']\n    is_virtual_station?: Scalars['Bool']\n    lat?: Scalars['Float']\n    lon?: Scalars['Float']\n    name?: Scalars['String']\n    parking_hoop?: Scalars['Int']\n    parking_type?: Scalars['String']\n    post_code?: Scalars['String']\n    region?: GbfsSystemRegion\n    rental_methods?: Scalars['Strings']\n    short_name?: Scalars['String']\n    station_area?: Scalars['Geometry']\n    station_id?: Scalars['String']\n    status?: GbfsStationStatus\n    __typename: 'GbfsStationInformation'\n}\n\nexport interface GbfsStationStatus {\n    is_installed?: Scalars['Bool']\n    is_renting?: Scalars['Bool']\n    is_returning?: Scalars['Bool']\n    last_reported?: Scalars['Int']\n    num_bikes_available?: Scalars['Int']\n    num_bikes_disabled?: Scalars['Int']\n    num_docks_available?: Scalars['Int']\n    num_docks_disabled?: Scalars['Int']\n    station_id?: Scalars['String']\n    vehicle_docks_available?: GbfsVehicleDockAvailable[]\n    vehicle_types_available?: GbfsVehicleTypeAvailable[]\n    __typename: 'GbfsStationStatus'\n}\n\nexport interface GbfsSystemAlert {\n    alert_id?: Scalars['String']\n    description?: Scalars['String']\n    last_updated?: Scalars['Int']\n    summary?: Scalars['String']\n    times?: GbfsAlertTime[]\n    type?: Scalars['String']\n    url?: Scalars['String']\n    __typename: 'GbfsSystemAlert'\n}\n\nexport interface GbfsSystemCalendar {\n    end_day?: Scalars['Int']\n    end_month?: Scalars['Int']\n    end_year?: Scalars['Int']\n    start_day?: Scalars['Int']\n    start_month?: Scalars['Int']\n    start_year?: Scalars['Int']\n    __typename: 'GbfsSystemCalendar'\n}\n\nexport interface GbfsSystemHour {\n    days?: Scalars['Strings']\n    end_time?: Scalars['String']\n    start_time?: Scalars['String']\n    user_types?: Scalars['Strings']\n    __typename: 'GbfsSystemHour'\n}\n\nexport interface GbfsSystemInformation {\n    brand_assets?: GbfsBrandAsset\n    email?: Scalars['String']\n    feed_contact_email?: Scalars['String']\n    language?: Scalars['String']\n    license_url?: Scalars['String']\n    name?: Scalars['String']\n    operator?: Scalars['String']\n    phone_number?: Scalars['String']\n    privacy_last_updated?: Scalars['Date']\n    privacy_url?: Scalars['String']\n    purchase_url?: Scalars['String']\n    rental_apps?: GbfsRentalApps\n    short_name?: Scalars['String']\n    start_date?: Scalars['Date']\n    system_id?: Scalars['String']\n    terms_last_updated?: Scalars['Date']\n    terms_url?: Scalars['String']\n    timezone?: Scalars['String']\n    url?: Scalars['String']\n    __typename: 'GbfsSystemInformation'\n}\n\nexport interface GbfsSystemPricingPlan {\n    currency?: Scalars['String']\n    description?: Scalars['String']\n    is_taxable?: Scalars['Bool']\n    name?: Scalars['String']\n    per_km_pricing?: GbfsPlanPrice[]\n    per_min_pricing?: GbfsPlanPrice[]\n    plan_id?: Scalars['String']\n    price?: Scalars['Float']\n    surge_pricing?: Scalars['Bool']\n    url?: Scalars['String']\n    __typename: 'GbfsSystemPricingPlan'\n}\n\nexport interface GbfsSystemRegion {\n    name?: Scalars['String']\n    region_id?: Scalars['String']\n    __typename: 'GbfsSystemRegion'\n}\n\nexport interface GbfsSystemVersion {\n    url?: Scalars['String']\n    version?: Scalars['String']\n    __typename: 'GbfsSystemVersion'\n}\n\nexport interface GbfsVehicleAssets {\n    icon_last_modified?: Scalars['Date']\n    icon_url?: Scalars['String']\n    icon_url_dark?: Scalars['String']\n    __typename: 'GbfsVehicleAssets'\n}\n\nexport interface GbfsVehicleDockAvailable {\n    count?: Scalars['Int']\n    vehicle_types?: GbfsVehicleType[]\n    __typename: 'GbfsVehicleDockAvailable'\n}\n\nexport interface GbfsVehicleType {\n    cargo_load_capacity?: Scalars['Int']\n    cargo_volume_capacity?: Scalars['Int']\n    color?: Scalars['String']\n    country_code?: Scalars['String']\n    default_pricing_plan?: GbfsSystemPricingPlan\n    default_reserve_time?: Scalars['Int']\n    eco_label?: Scalars['String']\n    eco_sticker?: Scalars['String']\n    form_factor?: Scalars['String']\n    gco_2_km?: Scalars['Int']\n    make?: Scalars['String']\n    max_permitted_speed?: Scalars['Int']\n    max_range_meters?: Scalars['Float']\n    model?: Scalars['String']\n    name?: Scalars['String']\n    pricing_plans?: GbfsSystemPricingPlan[]\n    propulsion_type?: Scalars['String']\n    rated_power?: Scalars['Int']\n    rental_uris?: GbfsRentalUris\n    return_constraint?: Scalars['String']\n    rider_capacity?: Scalars['Int']\n    vehicle_accessories?: Scalars['Strings']\n    vehicle_assets?: GbfsVehicleAssets\n    vehicle_image?: Scalars['String']\n    vehicle_type_id?: Scalars['String']\n    wheel_count?: Scalars['Int']\n    __typename: 'GbfsVehicleType'\n}\n\nexport interface GbfsVehicleTypeAvailable {\n    count?: Scalars['Int']\n    num_bikes_disabled?: Scalars['Int']\n    num_docks_available?: Scalars['Int']\n    vehicle_type?: GbfsVehicleType\n    __typename: 'GbfsVehicleTypeAvailable'\n}\n\nexport type ImportStatus = 'ERROR' | 'IN_PROGRESS' | 'SUCCESS'\n\nexport interface Itinerary {\n    distance: Distance\n    duration: Duration\n    end_time: Scalars['Time']\n    from: Waypoint\n    legs?: Leg[]\n    start_time: Scalars['Time']\n    to: Waypoint\n    __typename: 'Itinerary'\n}\n\nexport interface Leg {\n    distance: Distance\n    duration: Duration\n    end_time: Scalars['Time']\n    from?: Waypoint\n    geometry: Scalars['LineString']\n    start_time: Scalars['Time']\n    steps?: Step[]\n    to?: Waypoint\n    __typename: 'Leg'\n}\n\n\n/** Describe the different levels of a station. Is mostly useful when used in conjunction with pathways. See https://gtfs.org/reference/static/#levelstxt */\nexport interface Level {\n    geometry: Scalars['Polygon']\n    id: Scalars['Int']\n    level_id: Scalars['String']\n    level_index: Scalars['Float']\n    level_name: Scalars['String']\n    stops?: Stop[]\n    __typename: 'Level'\n}\n\nexport type LicenseValue = 'EXCLUDE_NO' | 'NO' | 'UNKNOWN' | 'YES'\n\n\n/**\n * An agency represents a single GTFS `agencies.txt` entity that was imported from a single feed version. The metadata, routes, etc., for an agency include only the data for that specific agency in that specific feed version. \n * \n * Operators are a higher-level abstraction over agencies, with each operator defined by an entry in the [Transitland Atlas](/documentation/atlas). Operators provide a method for enriching the basic GTFS agency data, as well as grouping agencies that span across multiple source feeds. Operators are matched with GTFS agencies using `associated_feeds`, a simple list of Feed OnestopIDs and GTFS `agency_id`s. For instance, the [Atlas operator record](https://github.com/transitland/transitland-atlas/blob/master/operators/o-dr5r-nyct.json) for the [New York City MTA](/operators/o-dr5r-nyct) has `associated_feeds` values for 8 different GTFS feeds. A query for this operator OnestopID thus represents the union of data from all 8 feeds, and includes routes for the subway, bus service for all 5 boroughs, commuter rail agencies, etc., operated by the MTA. This record also includes additional metadata about the MTA, such as the United States National Transit Database ID, Wikidata IDs, and alternate names for the agency. Operator records are created and maintained through pull requests to the Atlas json files and synchronized with the Transitland database on each commit.\n */\nexport interface Operator {\n    agencies?: Agency[]\n    feeds?: Feed[]\n    file?: Scalars['String']\n    generated: Scalars['Boolean']\n    id: Scalars['Int']\n    name?: Scalars['String']\n    onestop_id?: Scalars['String']\n    search_rank?: Scalars['String']\n    short_name?: Scalars['String']\n    tags?: Scalars['Tags']\n    website?: Scalars['String']\n    __typename: 'Operator'\n}\n\n\n/** The GTFS-Pathways extension uses a graph representation to describe subway or train, with nodes (the locations) and edges (the pathways). See https://gtfs.org/reference/static/#pathwaystxt */\nexport interface Pathway {\n    from_stop: Stop\n    id: Scalars['Int']\n    is_bidirectional: Scalars['Int']\n    length: Scalars['Float']\n    max_slope: Scalars['Float']\n    min_width: Scalars['Float']\n    pathway_id: Scalars['String']\n    pathway_mode: Scalars['Int']\n    reverse_signposted_as: Scalars['String']\n    signposted_as: Scalars['String']\n    stair_count: Scalars['Int']\n    to_stop: Stop\n    traversal_time: Scalars['Int']\n    __typename: 'Pathway'\n}\n\nexport interface Place {\n    adm0_name?: Scalars['String']\n    adm1_name?: Scalars['String']\n    city_name?: Scalars['String']\n    count: Scalars['Int']\n    operators?: Operator[]\n    __typename: 'Place'\n}\n\nexport type PlaceAggregationLevel = 'ADM0' | 'ADM0_ADM1' | 'ADM0_ADM1_CITY' | 'ADM0_CITY' | 'ADM1_CITY' | 'CITY'\n\nexport interface Query {\n    agencies: Agency[]\n    bikes?: GbfsFreeBikeStatus[]\n    directions: Directions\n    docks?: GbfsStationInformation[]\n    feed_versions: FeedVersion[]\n    feeds: Feed[]\n    operators: Operator[]\n    places?: Place[]\n    routes: Route[]\n    stops: Stop[]\n    trips: Trip[]\n    __typename: 'Query'\n}\n\n\n/** See https://gtfs.org/reference/realtime/v2/#message-timerange */\nexport interface RTTimeRange {\n    end?: Scalars['Int']\n    start?: Scalars['Int']\n    __typename: 'RTTimeRange'\n}\n\n\n/** See https://gtfs.org/reference/realtime/v2/#message-translatedstring */\nexport interface RTTranslation {\n    language?: Scalars['String']\n    text: Scalars['String']\n    __typename: 'RTTranslation'\n}\n\n\n/** See https://gtfs.org/reference/realtime/v2/#message-tripdescriptor */\nexport interface RTTripDescriptor {\n    direction_id?: Scalars['Int']\n    route_id?: Scalars['String']\n    schedule_relationship?: Scalars['String']\n    start_date?: Scalars['Date']\n    start_time?: Scalars['Seconds']\n    trip_id?: Scalars['String']\n    __typename: 'RTTripDescriptor'\n}\n\n\n/** See https://gtfs.org/reference/realtime/v2/#message-vehicledescriptor */\nexport interface RTVehicleDescriptor {\n    id?: Scalars['String']\n    label?: Scalars['String']\n    license_plate?: Scalars['String']\n    __typename: 'RTVehicleDescriptor'\n}\n\nexport type Role = 'ADMIN' | 'ANON' | 'USER'\n\n\n/** See https://gtfs.org/schedule/reference/#routestxt */\nexport interface Route {\n    agency: Agency\n    alerts?: Alert[]\n    census_geographies?: CensusGeography[]\n    continuous_drop_off?: Scalars['Int']\n    continuous_pickup?: Scalars['Int']\n    feed_onestop_id: Scalars['String']\n    feed_version: FeedVersion\n    feed_version_sha1: Scalars['String']\n    geometries: RouteGeometry[]\n    geometry?: Scalars['Geometry']\n    headways: RouteHeadway[]\n    id: Scalars['Int']\n    onestop_id?: Scalars['String']\n    patterns?: RouteStopPattern[]\n    route_attribute?: RouteAttribute\n    route_color: Scalars['String']\n    route_desc: Scalars['String']\n    route_id: Scalars['String']\n    route_long_name: Scalars['String']\n    route_short_name: Scalars['String']\n    route_sort_order: Scalars['Int']\n    route_stop_buffer: RouteStopBuffer\n    route_stops: RouteStop[]\n    route_text_color: Scalars['String']\n    route_type: Scalars['Int']\n    route_url: Scalars['String']\n    search_rank?: Scalars['String']\n    stops: Stop[]\n    trips: Trip[]\n    __typename: 'Route'\n}\n\n\n/** MTC GTFS+ Extension: route_attributes.txt */\nexport interface RouteAttribute {\n    category?: Scalars['Int']\n    running_way?: Scalars['Int']\n    subcategory?: Scalars['Int']\n    __typename: 'RouteAttribute'\n}\n\nexport interface RouteGeometry {\n    combined_geometry?: Scalars['Geometry']\n    first_point_max_distance?: Scalars['Float']\n    /** If true, the source GTFS feed provides no shapes. This route geometry is based on straight lines between stop points. */\n    generated: Scalars['Boolean']\n    geometry?: Scalars['LineString']\n    length?: Scalars['Float']\n    max_segment_length?: Scalars['Float']\n    __typename: 'RouteGeometry'\n}\n\nexport interface RouteHeadway {\n    departures?: Scalars['Seconds'][]\n    direction_id?: Scalars['Int']\n    dow_category?: Scalars['Int']\n    headway_secs?: Scalars['Int']\n    service_date?: Scalars['Date']\n    stop: Stop\n    stop_trip_count?: Scalars['Int']\n    __typename: 'RouteHeadway'\n}\n\nexport interface RouteStop {\n    agency: Agency\n    agency_id: Scalars['Int']\n    id: Scalars['Int']\n    route: Route\n    route_id: Scalars['Int']\n    stop: Stop\n    stop_id: Scalars['Int']\n    __typename: 'RouteStop'\n}\n\nexport interface RouteStopBuffer {\n    stop_buffer?: Scalars['Geometry']\n    stop_convexhull?: Scalars['Polygon']\n    stop_points?: Scalars['Geometry']\n    __typename: 'RouteStopBuffer'\n}\n\nexport interface RouteStopPattern {\n    count: Scalars['Int']\n    direction_id: Scalars['Int']\n    stop_pattern_id: Scalars['Int']\n    trips?: Trip[]\n    __typename: 'RouteStopPattern'\n}\n\nexport type ScheduleRelationship = 'ADDED' | 'CANCELED' | 'SCHEDULED' | 'UNSCHEDULED'\n\n\n/** Record from a static GTFS [shapes.txt](https://gtfs.org/schedule/reference/#shapestxt) file. */\nexport interface Shape {\n    generated: Scalars['Boolean']\n    geometry: Scalars['LineString']\n    id: Scalars['Int']\n    shape_id: Scalars['String']\n    __typename: 'Shape'\n}\n\nexport interface Step {\n    distance: Distance\n    duration: Duration\n    end_time: Scalars['Time']\n    geometry_offset: Scalars['Int']\n    instruction: Scalars['String']\n    mode: StepMode\n    start_time: Scalars['Time']\n    to?: Waypoint\n    __typename: 'Step'\n}\n\nexport type StepMode = 'AUTO' | 'BICYCLE' | 'LINE' | 'TRANSIT' | 'WALK'\n\n\n/** See https://gtfs.org/reference/static/#stopstxt */\nexport interface Stop {\n    alerts?: Alert[]\n    arrivals: StopTime[]\n    census_geographies?: CensusGeography[]\n    children?: Stop[]\n    departures: StopTime[]\n    directions: Directions\n    external_reference?: StopExternalReference\n    feed_onestop_id: Scalars['String']\n    feed_version: FeedVersion\n    feed_version_sha1: Scalars['String']\n    geometry: Scalars['Point']\n    id: Scalars['Int']\n    level?: Level\n    location_type: Scalars['Int']\n    nearby_stops?: Stop[]\n    observations?: StopObservation[]\n    onestop_id: Scalars['String']\n    parent?: Stop\n    pathways_from_stop: Pathway[]\n    pathways_to_stop: Pathway[]\n    place?: StopPlace\n    platform_code?: Scalars['String']\n    route_stops: RouteStop[]\n    search_rank?: Scalars['String']\n    stop_code: Scalars['String']\n    stop_desc: Scalars['String']\n    stop_id: Scalars['String']\n    stop_name: Scalars['String']\n    stop_times: StopTime[]\n    stop_timezone: Scalars['String']\n    stop_url: Scalars['String']\n    tts_stop_name?: Scalars['String']\n    wheelchair_boarding: Scalars['Int']\n    zone_id: Scalars['String']\n    __typename: 'Stop'\n}\n\nexport interface StopExternalReference {\n    id: Scalars['Int']\n    inactive?: Scalars['Boolean']\n    target_active_stop?: Stop\n    target_feed_onestop_id?: Scalars['String']\n    target_stop_id?: Scalars['String']\n    __typename: 'StopExternalReference'\n}\n\nexport interface StopObservation {\n    agency_id?: Scalars['String']\n    from_stop_id?: Scalars['String']\n    observed_arrival_time?: Scalars['Seconds']\n    observed_departure_time?: Scalars['Seconds']\n    route_id?: Scalars['String']\n    schedule_relationship?: Scalars['String']\n    scheduled_arrival_time?: Scalars['Seconds']\n    scheduled_departure_time?: Scalars['Seconds']\n    source?: Scalars['String']\n    stop_sequence?: Scalars['Int']\n    to_stop_id?: Scalars['String']\n    trip_id?: Scalars['String']\n    trip_start_date?: Scalars['Date']\n    trip_start_time?: Scalars['Seconds']\n    __typename: 'StopObservation'\n}\n\nexport interface StopPlace {\n    adm0_iso?: Scalars['String']\n    adm0_name?: Scalars['String']\n    adm1_iso?: Scalars['String']\n    adm1_name?: Scalars['String']\n    __typename: 'StopPlace'\n}\n\n\n/** Record from a static GTFS [stop_times.txt](https://gtfs.org/schedule/reference/#stop_timestxt) file. */\nexport interface StopTime {\n    arrival: StopTimeEvent\n    arrival_time: Scalars['Seconds']\n    continuous_drop_off?: Scalars['Int']\n    continuous_pickup?: Scalars['Int']\n    departure: StopTimeEvent\n    departure_time: Scalars['Seconds']\n    drop_off_type?: Scalars['Int']\n    interpolated?: Scalars['Int']\n    pickup_type?: Scalars['Int']\n    service_date?: Scalars['Date']\n    shape_dist_traveled?: Scalars['Float']\n    stop: Stop\n    stop_headsign?: Scalars['String']\n    stop_sequence: Scalars['Int']\n    timepoint?: Scalars['Int']\n    trip: Trip\n    __typename: 'StopTime'\n}\n\nexport interface StopTimeEvent {\n    delay?: Scalars['Int']\n    estimated?: Scalars['Seconds']\n    estimated_utc?: Scalars['Time']\n    scheduled?: Scalars['Seconds']\n    stop_timezone: Scalars['String']\n    uncertainty?: Scalars['Int']\n    __typename: 'StopTimeEvent'\n}\n\n\n/** Record from a static GTFS [trips.txt](https://gtfs.org/schedule/reference/#tripstxt) file optionally enriched with by GTFS Realtime [TripUpdate](https://gtfs.org/reference/realtime/v2/#message-tripupdate) and [Alert](https://gtfs.org/reference/realtime/v2/#message-alert) messages. */\nexport interface Trip {\n    alerts?: Alert[]\n    bikes_allowed: Scalars['Int']\n    block_id: Scalars['String']\n    calendar: Calendar\n    direction_id: Scalars['Int']\n    feed_version: FeedVersion\n    frequencies: Frequency[]\n    id: Scalars['Int']\n    route: Route\n    schedule_relationship?: ScheduleRelationship\n    shape?: Shape\n    stop_pattern_id: Scalars['Int']\n    stop_times: (StopTime | undefined)[]\n    timestamp?: Scalars['Time']\n    trip_headsign: Scalars['String']\n    trip_id: Scalars['String']\n    trip_short_name: Scalars['String']\n    wheelchair_accessible: Scalars['Int']\n    __typename: 'Trip'\n}\n\nexport interface ValidationResult {\n    agencies: Agency[]\n    earliest_calendar_date?: Scalars['Date']\n    errors: ValidationResultErrorGroup[]\n    failure_reason: Scalars['String']\n    feed_infos: FeedInfo[]\n    files: FeedVersionFileInfo[]\n    latest_calendar_date?: Scalars['Date']\n    routes: Route[]\n    service_levels: FeedVersionServiceLevel[]\n    sha1: Scalars['String']\n    stops: Stop[]\n    success: Scalars['Boolean']\n    warnings: ValidationResultErrorGroup[]\n    __typename: 'ValidationResult'\n}\n\nexport interface ValidationResultError {\n    entity_id: Scalars['String']\n    error_type: Scalars['String']\n    field: Scalars['String']\n    filename: Scalars['String']\n    message: Scalars['String']\n    value: Scalars['String']\n    __typename: 'ValidationResultError'\n}\n\nexport interface ValidationResultErrorGroup {\n    count: Scalars['Int']\n    error_type: Scalars['String']\n    errors: ValidationResultError[]\n    filename: Scalars['String']\n    limit: Scalars['Int']\n    __typename: 'ValidationResultErrorGroup'\n}\n\n\n/** [Vehicle Position](https://gtfs.org/reference/realtime/v2/#message-vehicleposition) message provided by a source GTFS Realtime feed. */\nexport interface VehiclePosition {\n    congestion_level?: Scalars['String']\n    current_status?: Scalars['String']\n    current_stop_sequence?: Scalars['Int']\n    position?: Scalars['Point']\n    stop_id?: Stop\n    timestamp?: Scalars['Time']\n    vehicle?: RTVehicleDescriptor\n    __typename: 'VehiclePosition'\n}\n\nexport interface Waypoint {\n    lat: Scalars['Float']\n    lon: Scalars['Float']\n    name?: Scalars['String']\n    __typename: 'Waypoint'\n}\n\n\n/** See https://gtfs.org/schedule/reference/#agencytxt */\nexport interface AgencyGenqlSelection{\n    agency_email?: boolean | number\n    agency_fare_url?: boolean | number\n    agency_id?: boolean | number\n    agency_lang?: boolean | number\n    agency_name?: boolean | number\n    agency_phone?: boolean | number\n    agency_timezone?: boolean | number\n    agency_url?: boolean | number\n    alerts?: (AlertGenqlSelection & { __args?: {active?: (Scalars['Boolean'] | null), limit?: (Scalars['Int'] | null)} })\n    census_geographies?: (CensusGeographyGenqlSelection & { __args: {layer: Scalars['String'], limit?: (Scalars['Int'] | null), radius?: (Scalars['Float'] | null)} })\n    feed_onestop_id?: boolean | number\n    feed_version?: FeedVersionGenqlSelection\n    feed_version_sha1?: boolean | number\n    geometry?: boolean | number\n    id?: boolean | number\n    onestop_id?: boolean | number\n    operator?: OperatorGenqlSelection\n    places?: (AgencyPlaceGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (AgencyPlaceFilter | null)} })\n    routes?: (RouteGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (RouteFilter | null)} })\n    search_rank?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface AgencyFilter {\n/** Search by country 2 letter ISO 3166 code (provided by Natural Earth) */\nadm0_iso?: (Scalars['String'] | null),\n/** Search by country name (provided by Natural Earth) */\nadm0_name?: (Scalars['String'] | null),\n/** Search by state/province/division ISO 3166-2 code (provided by Natural Earth) */\nadm1_iso?: (Scalars['String'] | null),\n/** Search by state/province/division name (provided by Natural Earth) */\nadm1_name?: (Scalars['String'] | null),agency_id?: (Scalars['String'] | null),\n/** Search for records with this GTFS agency_name */\nagency_name?: (Scalars['String'] | null),\n/** Search by city name (provided by Natural Earth) */\ncity_name?: (Scalars['String'] | null),feed_onestop_id?: (Scalars['String'] | null),feed_version_sha1?: (Scalars['String'] | null),license?: (LicenseFilter | null),\n/** Search for agencies within a radius */\nnear?: (PointRadius | null),onestop_id?: (Scalars['String'] | null),\n/** Full text search */\nsearch?: (Scalars['String'] | null),within?: (Scalars['Polygon'] | null)}\n\nexport interface AgencyPlaceGenqlSelection{\n    adm0_iso?: boolean | number\n    adm0_name?: boolean | number\n    adm1_iso?: boolean | number\n    adm1_name?: boolean | number\n    city_name?: boolean | number\n    rank?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface AgencyPlaceFilter {min_rank?: (Scalars['Float'] | null)}\n\n\n/** [Alert](https://gtfs.org/reference/realtime/v2/#message-alert) message, also called a service alert, provided by a source GTFS Realtime feed. */\nexport interface AlertGenqlSelection{\n    active_period?: RTTimeRangeGenqlSelection\n    cause?: boolean | number\n    description_text?: RTTranslationGenqlSelection\n    effect?: boolean | number\n    header_text?: RTTranslationGenqlSelection\n    severity_level?: boolean | number\n    tts_description_text?: RTTranslationGenqlSelection\n    tts_header_text?: RTTranslationGenqlSelection\n    url?: RTTranslationGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** Record from a static GTFS [calendars.txt](https://gtfs.org/schedule/reference/#calendarstxt) file. */\nexport interface CalendarGenqlSelection{\n    added_dates?: { __args: {limit?: (Scalars['Int'] | null)} } | boolean | number\n    end_date?: boolean | number\n    friday?: boolean | number\n    id?: boolean | number\n    monday?: boolean | number\n    removed_dates?: { __args: {limit?: (Scalars['Int'] | null)} } | boolean | number\n    saturday?: boolean | number\n    service_id?: boolean | number\n    start_date?: boolean | number\n    sunday?: boolean | number\n    thursday?: boolean | number\n    tuesday?: boolean | number\n    wednesday?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface CalendarDateFilter {date?: (Scalars['Date'] | null),exception_type?: (Scalars['Int'] | null)}\n\nexport interface CensusGeographyGenqlSelection{\n    aland?: boolean | number\n    awater?: boolean | number\n    geoid?: boolean | number\n    geometry?: boolean | number\n    id?: boolean | number\n    layer_name?: boolean | number\n    name?: boolean | number\n    values?: (CensusValueGenqlSelection & { __args: {limit?: (Scalars['Int'] | null), table_names: Scalars['String'][]} })\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface CensusTableGenqlSelection{\n    id?: boolean | number\n    table_group?: boolean | number\n    table_name?: boolean | number\n    table_title?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface CensusValueGenqlSelection{\n    table?: CensusTableGenqlSelection\n    values?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface DirectionRequest {depart_at?: (Scalars['Time'] | null),from: WaypointInput,mode: StepMode,to: WaypointInput}\n\nexport interface DirectionsGenqlSelection{\n    data_source?: boolean | number\n    destination?: WaypointGenqlSelection\n    distance?: DistanceGenqlSelection\n    duration?: DurationGenqlSelection\n    end_time?: boolean | number\n    exception?: boolean | number\n    itineraries?: ItineraryGenqlSelection\n    origin?: WaypointGenqlSelection\n    start_time?: boolean | number\n    success?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface DistanceGenqlSelection{\n    distance?: boolean | number\n    units?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface DurationGenqlSelection{\n    duration?: boolean | number\n    units?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** Feeds contain details on how to access transit information, including URLs to data sources in various formats (GTFS, GTFS-RT, GBFS, etc), license information, related feeds, details on how to make authorized requests, and feed version archives. Feed versions are archived (as `.zip` files) and imported into the Transitland database for querying agencies, stops, routes, trips, etc. */\nexport interface FeedGenqlSelection{\n    associated_operators?: OperatorGenqlSelection\n    authorization?: FeedAuthorizationGenqlSelection\n    feed_fetches?: (FeedFetchGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (FeedFetchFilter | null)} })\n    feed_state?: FeedStateGenqlSelection\n    /** Versions of this feed that have been fetched, archived, and imported by Transitland */\n    feed_versions?: (FeedVersionGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (FeedVersionFilter | null)} })\n    file?: boolean | number\n    /** Unique integer ID */\n    id?: boolean | number\n    /** Language(s) included in this feed */\n    languages?: boolean | number\n    license?: FeedLicenseGenqlSelection\n    /** A common name for this feed. Optional. Alternatively use `associated_operators[].name` */\n    name?: boolean | number\n    /** Onestop ID for this feed */\n    onestop_id?: boolean | number\n    search_rank?: boolean | number\n    spec?: boolean | number\n    tags?: boolean | number\n    urls?: FeedUrlsGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** Details on how to construct an HTTP request to access a protected resource */\nexport interface FeedAuthorizationGenqlSelection{\n    /** Website to visit to sign up for an account */\n    info_url?: boolean | number\n    /** When `type=query_param`, this specifies the name of the query parameter. When `type=header`, this specifies the name of the header */\n    param_name?: boolean | number\n    /** Method for inserting authorization secret into request */\n    type?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface FeedFetchGenqlSelection{\n    fetch_error?: boolean | number\n    fetched_at?: boolean | number\n    id?: boolean | number\n    response_code?: boolean | number\n    response_sha1?: boolean | number\n    response_size?: boolean | number\n    success?: boolean | number\n    url?: boolean | number\n    url_type?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface FeedFetchFilter {success?: (Scalars['Boolean'] | null)}\n\nexport interface FeedFilter {\n/** Search for feeds with or without a fetch error */\nfetch_error?: (Scalars['Boolean'] | null),\n/** Search for feeds by their import status */\nimport_status?: (ImportStatus | null),license?: (LicenseFilter | null),\n/** Search for feed with a specific Onestop ID */\nonestop_id?: (Scalars['String'] | null),\n/** Full text search */\nsearch?: (Scalars['String'] | null),\n/** Search for feeds by their source URLs */\nsource_url?: (FeedSourceUrl | null),\n/** Search for feeds of certain data types */\nspec?: (FeedSpecTypes[] | null),\n/** Search for feeds with a tag */\ntags?: (Scalars['Tags'] | null)}\n\n\n/** Record from a static GTFS [feed_info.txt](https://gtfs.org/schedule/reference/#feed_infotxt) file. */\nexport interface FeedInfoGenqlSelection{\n    default_lang?: boolean | number\n    feed_contact_email?: boolean | number\n    feed_contact_url?: boolean | number\n    feed_end_date?: boolean | number\n    feed_lang?: boolean | number\n    feed_publisher_name?: boolean | number\n    feed_publisher_url?: boolean | number\n    feed_start_date?: boolean | number\n    feed_version?: boolean | number\n    id?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** License information for this feed, curated by Interline and contributors to the Transitland Atlas feed registry. Note that this does not constitute legal advice. Users are advised to review and confirm any terms and conditions attached to a source feed. */\nexport interface FeedLicenseGenqlSelection{\n    /** Feed consumers must follow these instructions for how to provide attribution */\n    attribution_instructions?: boolean | number\n    /** Feed consumers must include this particular text when using this feed */\n    attribution_text?: boolean | number\n    /** Are feed consumers allowed to use the feed for commercial purposes? */\n    commercial_use_allowed?: boolean | number\n    /** Are feed consumers allowed to create and share derived products from the feed? */\n    create_derived_product?: boolean | number\n    /** Are feed consumers allowed to redistribute the feed in its entirety? */\n    redistribution_allowed?: boolean | number\n    /** Are feed consumers allowed to keep their modifications of this feed private? */\n    share_alike_optional?: boolean | number\n    /** SPDX identifier for a common license. See https://spdx.org/licenses/ */\n    spdx_identifier?: boolean | number\n    /** URL for a custom license */\n    url?: boolean | number\n    /** Are feed consumers allowed to use the feed contents without including attribution text in their app or map? */\n    use_without_attribution?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface FeedSourceUrl {case_sensitive?: (Scalars['Boolean'] | null),type?: (FeedSourceUrlTypes | null),url?: (Scalars['String'] | null)}\n\n\n/** Details on the current state of this feed, such as active version, last fetch time, etc. */\nexport interface FeedStateGenqlSelection{\n    /** The active feed version for this feed */\n    feed_version?: FeedVersionGenqlSelection\n    id?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** URL(s) from which Transitland sources a feed */\nexport interface FeedUrlsGenqlSelection{\n    /** URL for GBFS feed `gbfs.json` auto-discovery file */\n    gbfs_auto_discovery?: boolean | number\n    /** URL for MDS feed provider endpoint */\n    mds_provider?: boolean | number\n    /** URL for GTFS Realtime Alert messages */\n    realtime_alerts?: boolean | number\n    /** URL for GTFS Realtime TripUpdate messages */\n    realtime_trip_updates?: boolean | number\n    /** URL for GTFS Realtime VehiclePosition messages */\n    realtime_vehicle_positions?: boolean | number\n    /** URL for the static feed that represents today's service */\n    static_current?: boolean | number\n    /** URLs for static feeds that represent past service that is no longer in effect  */\n    static_historic?: boolean | number\n    /** URLs for static feeds that represent service planned for upcoming dates. Typically used to represent calendar/service changes that will take effect few weeks or months in the future */\n    static_planned?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** Feed versions represent a specific static GTFS file that was published at a particular point in time, and are generally accessed and referenced using the [SHA1 checksum](https://en.wikipedia.org/wiki/SHA-1) of the GTFS archive. */\nexport interface FeedVersionGenqlSelection{\n    agencies?: (AgencyGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (AgencyFilter | null)} })\n    created_by?: boolean | number\n    description?: boolean | number\n    earliest_calendar_date?: boolean | number\n    feed?: FeedGenqlSelection\n    feed_infos?: (FeedInfoGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null)} })\n    feed_version_gtfs_import?: FeedVersionGtfsImportGenqlSelection\n    fetched_at?: boolean | number\n    file?: boolean | number\n    /** Metadata for each text file present in the main directory of the zip archive  */\n    files?: (FeedVersionFileInfoGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null)} })\n    /** Convex hull around all active stops in the feed version */\n    geometry?: boolean | number\n    id?: boolean | number\n    latest_calendar_date?: boolean | number\n    name?: boolean | number\n    routes?: (RouteGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (RouteFilter | null)} })\n    service_levels?: (FeedVersionServiceLevelGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (FeedVersionServiceLevelFilter | null)} })\n    sha1?: boolean | number\n    stops?: (StopGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (StopFilter | null)} })\n    trips?: (TripGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (TripFilter | null)} })\n    updated_by?: boolean | number\n    url?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface FeedVersionDeleteResultGenqlSelection{\n    success?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface FeedVersionFetchResultGenqlSelection{\n    feed_version?: FeedVersionGenqlSelection\n    fetch_error?: boolean | number\n    found_dir_sha1?: boolean | number\n    found_sha1?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface FeedVersionFileInfoGenqlSelection{\n    csv_like?: boolean | number\n    header?: boolean | number\n    id?: boolean | number\n    name?: boolean | number\n    rows?: boolean | number\n    sha1?: boolean | number\n    size?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface FeedVersionFilter {covers?: (ServiceCoversFilter | null),feed_ids?: (Scalars['Int'][] | null),feed_onestop_id?: (Scalars['String'] | null),file?: (Scalars['String'] | null),import_status?: (ImportStatus | null),sha1?: (Scalars['String'] | null)}\n\nexport interface FeedVersionGtfsImportGenqlSelection{\n    created_at?: boolean | number\n    entity_count?: boolean | number\n    exception_log?: boolean | number\n    id?: boolean | number\n    in_progress?: boolean | number\n    interpolated_stop_time_count?: boolean | number\n    schedule_removed?: boolean | number\n    skip_entity_error_count?: boolean | number\n    skip_entity_filter_count?: boolean | number\n    skip_entity_marked_count?: boolean | number\n    skip_entity_reference_count?: boolean | number\n    success?: boolean | number\n    updated_at?: boolean | number\n    warning_count?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface FeedVersionImportResultGenqlSelection{\n    success?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface FeedVersionServiceLevelGenqlSelection{\n    end_date?: boolean | number\n    friday?: boolean | number\n    id?: boolean | number\n    monday?: boolean | number\n    saturday?: boolean | number\n    start_date?: boolean | number\n    sunday?: boolean | number\n    thursday?: boolean | number\n    tuesday?: boolean | number\n    wednesday?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface FeedVersionServiceLevelFilter {end_date?: (Scalars['Date'] | null),start_date?: (Scalars['Date'] | null)}\n\nexport interface FeedVersionSetInput {description?: (Scalars['String'] | null),name?: (Scalars['String'] | null)}\n\nexport interface FeedVersionUnimportResultGenqlSelection{\n    success?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** Record from a static GTFS [frequencies.txt](https://gtfs.org/schedule/reference/#frequenciestxt) file. */\nexport interface FrequencyGenqlSelection{\n    end_time?: boolean | number\n    exact_times?: boolean | number\n    headway_secs?: boolean | number\n    id?: boolean | number\n    start_time?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsAlertTimeGenqlSelection{\n    end?: boolean | number\n    start?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsBikeRequest {near?: (PointRadius | null)}\n\nexport interface GbfsBrandAssetGenqlSelection{\n    brand_image_url?: boolean | number\n    brand_image_url_dark?: boolean | number\n    brand_last_modified?: boolean | number\n    brand_terms_url?: boolean | number\n    color?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsDockRequest {near?: (PointRadius | null)}\n\nexport interface GbfsFeedGenqlSelection{\n    alerts?: GbfsSystemAlertGenqlSelection\n    calendars?: GbfsSystemCalendarGenqlSelection\n    rental_hours?: GbfsSystemHourGenqlSelection\n    station_information?: GbfsStationInformationGenqlSelection\n    system_information?: GbfsSystemInformationGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsFreeBikeStatusGenqlSelection{\n    available_until?: boolean | number\n    bike_id?: boolean | number\n    current_fuel_percent?: boolean | number\n    current_range_meters?: boolean | number\n    feed?: GbfsFeedGenqlSelection\n    home_station?: GbfsStationInformationGenqlSelection\n    is_disabled?: boolean | number\n    is_reserved?: boolean | number\n    last_reported?: boolean | number\n    lat?: boolean | number\n    lon?: boolean | number\n    pricing_plan?: GbfsSystemPricingPlanGenqlSelection\n    rental_uris?: GbfsRentalUrisGenqlSelection\n    station?: GbfsStationInformationGenqlSelection\n    vehicle_equipment?: boolean | number\n    vehicle_type?: GbfsVehicleTypeGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsGeofenceFeatureGenqlSelection{\n    geometry?: boolean | number\n    type?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsGeofencePropertyGenqlSelection{\n    end?: boolean | number\n    name?: boolean | number\n    rules?: GbfsGeofenceRuleGenqlSelection\n    start?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsGeofenceRuleGenqlSelection{\n    maximum_speed_kph?: boolean | number\n    ride_allowed?: boolean | number\n    ride_through_allowed?: boolean | number\n    station_parking?: boolean | number\n    vehicle_type?: GbfsVehicleTypeGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsGeofenceZoneGenqlSelection{\n    features?: GbfsGeofenceFeatureGenqlSelection\n    type?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsPlanPriceGenqlSelection{\n    end?: boolean | number\n    interval?: boolean | number\n    rate?: boolean | number\n    start?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsRentalAppGenqlSelection{\n    discovery_uri?: boolean | number\n    store_uri?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsRentalAppsGenqlSelection{\n    android?: GbfsRentalAppGenqlSelection\n    ios?: GbfsRentalAppGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsRentalUrisGenqlSelection{\n    android?: boolean | number\n    ios?: boolean | number\n    web?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsStationInformationGenqlSelection{\n    address?: boolean | number\n    capacity?: boolean | number\n    contact_phone?: boolean | number\n    cross_street?: boolean | number\n    feed?: GbfsFeedGenqlSelection\n    is_charging_station?: boolean | number\n    is_valet_station?: boolean | number\n    is_virtual_station?: boolean | number\n    lat?: boolean | number\n    lon?: boolean | number\n    name?: boolean | number\n    parking_hoop?: boolean | number\n    parking_type?: boolean | number\n    post_code?: boolean | number\n    region?: GbfsSystemRegionGenqlSelection\n    rental_methods?: boolean | number\n    short_name?: boolean | number\n    station_area?: boolean | number\n    station_id?: boolean | number\n    status?: GbfsStationStatusGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsStationStatusGenqlSelection{\n    is_installed?: boolean | number\n    is_renting?: boolean | number\n    is_returning?: boolean | number\n    last_reported?: boolean | number\n    num_bikes_available?: boolean | number\n    num_bikes_disabled?: boolean | number\n    num_docks_available?: boolean | number\n    num_docks_disabled?: boolean | number\n    station_id?: boolean | number\n    vehicle_docks_available?: GbfsVehicleDockAvailableGenqlSelection\n    vehicle_types_available?: GbfsVehicleTypeAvailableGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsSystemAlertGenqlSelection{\n    alert_id?: boolean | number\n    description?: boolean | number\n    last_updated?: boolean | number\n    summary?: boolean | number\n    times?: GbfsAlertTimeGenqlSelection\n    type?: boolean | number\n    url?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsSystemCalendarGenqlSelection{\n    end_day?: boolean | number\n    end_month?: boolean | number\n    end_year?: boolean | number\n    start_day?: boolean | number\n    start_month?: boolean | number\n    start_year?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsSystemHourGenqlSelection{\n    days?: boolean | number\n    end_time?: boolean | number\n    start_time?: boolean | number\n    user_types?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsSystemInformationGenqlSelection{\n    brand_assets?: GbfsBrandAssetGenqlSelection\n    email?: boolean | number\n    feed_contact_email?: boolean | number\n    language?: boolean | number\n    license_url?: boolean | number\n    name?: boolean | number\n    operator?: boolean | number\n    phone_number?: boolean | number\n    privacy_last_updated?: boolean | number\n    privacy_url?: boolean | number\n    purchase_url?: boolean | number\n    rental_apps?: GbfsRentalAppsGenqlSelection\n    short_name?: boolean | number\n    start_date?: boolean | number\n    system_id?: boolean | number\n    terms_last_updated?: boolean | number\n    terms_url?: boolean | number\n    timezone?: boolean | number\n    url?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsSystemPricingPlanGenqlSelection{\n    currency?: boolean | number\n    description?: boolean | number\n    is_taxable?: boolean | number\n    name?: boolean | number\n    per_km_pricing?: GbfsPlanPriceGenqlSelection\n    per_min_pricing?: GbfsPlanPriceGenqlSelection\n    plan_id?: boolean | number\n    price?: boolean | number\n    surge_pricing?: boolean | number\n    url?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsSystemRegionGenqlSelection{\n    name?: boolean | number\n    region_id?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsSystemVersionGenqlSelection{\n    url?: boolean | number\n    version?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsVehicleAssetsGenqlSelection{\n    icon_last_modified?: boolean | number\n    icon_url?: boolean | number\n    icon_url_dark?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsVehicleDockAvailableGenqlSelection{\n    count?: boolean | number\n    vehicle_types?: GbfsVehicleTypeGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsVehicleTypeGenqlSelection{\n    cargo_load_capacity?: boolean | number\n    cargo_volume_capacity?: boolean | number\n    color?: boolean | number\n    country_code?: boolean | number\n    default_pricing_plan?: GbfsSystemPricingPlanGenqlSelection\n    default_reserve_time?: boolean | number\n    eco_label?: boolean | number\n    eco_sticker?: boolean | number\n    form_factor?: boolean | number\n    gco_2_km?: boolean | number\n    make?: boolean | number\n    max_permitted_speed?: boolean | number\n    max_range_meters?: boolean | number\n    model?: boolean | number\n    name?: boolean | number\n    pricing_plans?: GbfsSystemPricingPlanGenqlSelection\n    propulsion_type?: boolean | number\n    rated_power?: boolean | number\n    rental_uris?: GbfsRentalUrisGenqlSelection\n    return_constraint?: boolean | number\n    rider_capacity?: boolean | number\n    vehicle_accessories?: boolean | number\n    vehicle_assets?: GbfsVehicleAssetsGenqlSelection\n    vehicle_image?: boolean | number\n    vehicle_type_id?: boolean | number\n    wheel_count?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface GbfsVehicleTypeAvailableGenqlSelection{\n    count?: boolean | number\n    num_bikes_disabled?: boolean | number\n    num_docks_available?: boolean | number\n    vehicle_type?: GbfsVehicleTypeGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface ItineraryGenqlSelection{\n    distance?: DistanceGenqlSelection\n    duration?: DurationGenqlSelection\n    end_time?: boolean | number\n    from?: WaypointGenqlSelection\n    legs?: LegGenqlSelection\n    start_time?: boolean | number\n    to?: WaypointGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface LegGenqlSelection{\n    distance?: DistanceGenqlSelection\n    duration?: DurationGenqlSelection\n    end_time?: boolean | number\n    from?: WaypointGenqlSelection\n    geometry?: boolean | number\n    start_time?: boolean | number\n    steps?: StepGenqlSelection\n    to?: WaypointGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** Describe the different levels of a station. Is mostly useful when used in conjunction with pathways. See https://gtfs.org/reference/static/#levelstxt */\nexport interface LevelGenqlSelection{\n    geometry?: boolean | number\n    id?: boolean | number\n    level_id?: boolean | number\n    level_index?: boolean | number\n    level_name?: boolean | number\n    stops?: StopGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface LicenseFilter {commercial_use_allowed?: (LicenseValue | null),create_derived_product?: (LicenseValue | null),redistribution_allowed?: (LicenseValue | null),share_alike_optional?: (LicenseValue | null),use_without_attribution?: (LicenseValue | null)}\n\n\n/**\n * An agency represents a single GTFS `agencies.txt` entity that was imported from a single feed version. The metadata, routes, etc., for an agency include only the data for that specific agency in that specific feed version. \n * \n * Operators are a higher-level abstraction over agencies, with each operator defined by an entry in the [Transitland Atlas](/documentation/atlas). Operators provide a method for enriching the basic GTFS agency data, as well as grouping agencies that span across multiple source feeds. Operators are matched with GTFS agencies using `associated_feeds`, a simple list of Feed OnestopIDs and GTFS `agency_id`s. For instance, the [Atlas operator record](https://github.com/transitland/transitland-atlas/blob/master/operators/o-dr5r-nyct.json) for the [New York City MTA](/operators/o-dr5r-nyct) has `associated_feeds` values for 8 different GTFS feeds. A query for this operator OnestopID thus represents the union of data from all 8 feeds, and includes routes for the subway, bus service for all 5 boroughs, commuter rail agencies, etc., operated by the MTA. This record also includes additional metadata about the MTA, such as the United States National Transit Database ID, Wikidata IDs, and alternate names for the agency. Operator records are created and maintained through pull requests to the Atlas json files and synchronized with the Transitland database on each commit.\n */\nexport interface OperatorGenqlSelection{\n    agencies?: AgencyGenqlSelection\n    feeds?: (FeedGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (FeedFilter | null)} })\n    file?: boolean | number\n    generated?: boolean | number\n    id?: boolean | number\n    name?: boolean | number\n    onestop_id?: boolean | number\n    search_rank?: boolean | number\n    short_name?: boolean | number\n    tags?: boolean | number\n    website?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface OperatorFilter {adm0_iso?: (Scalars['String'] | null),adm0_name?: (Scalars['String'] | null),adm1_iso?: (Scalars['String'] | null),adm1_name?: (Scalars['String'] | null),agency_id?: (Scalars['String'] | null),city_name?: (Scalars['String'] | null),feed_onestop_id?: (Scalars['String'] | null),license?: (LicenseFilter | null),merged?: (Scalars['Boolean'] | null),onestop_id?: (Scalars['String'] | null),search?: (Scalars['String'] | null),tags?: (Scalars['Tags'] | null)}\n\n\n/** The GTFS-Pathways extension uses a graph representation to describe subway or train, with nodes (the locations) and edges (the pathways). See https://gtfs.org/reference/static/#pathwaystxt */\nexport interface PathwayGenqlSelection{\n    from_stop?: StopGenqlSelection\n    id?: boolean | number\n    is_bidirectional?: boolean | number\n    length?: boolean | number\n    max_slope?: boolean | number\n    min_width?: boolean | number\n    pathway_id?: boolean | number\n    pathway_mode?: boolean | number\n    reverse_signposted_as?: boolean | number\n    signposted_as?: boolean | number\n    stair_count?: boolean | number\n    to_stop?: StopGenqlSelection\n    traversal_time?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface PathwayFilter {pathway_mode?: (Scalars['Int'] | null)}\n\nexport interface PlaceGenqlSelection{\n    adm0_name?: boolean | number\n    adm1_name?: boolean | number\n    city_name?: boolean | number\n    count?: boolean | number\n    operators?: OperatorGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface PlaceFilter {adm0_name?: (Scalars['String'] | null),adm1_name?: (Scalars['String'] | null),city_name?: (Scalars['String'] | null),min_rank?: (Scalars['Float'] | null)}\n\nexport interface PointRadius {lat: Scalars['Float'],lon: Scalars['Float'],radius: Scalars['Float']}\n\nexport interface QueryGenqlSelection{\n    agencies?: (AgencyGenqlSelection & { __args?: {after?: (Scalars['Int'] | null), ids?: (Scalars['Int'][] | null), limit?: (Scalars['Int'] | null), where?: (AgencyFilter | null)} })\n    bikes?: (GbfsFreeBikeStatusGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (GbfsBikeRequest | null)} })\n    directions?: (DirectionsGenqlSelection & { __args: {where: DirectionRequest} })\n    docks?: (GbfsStationInformationGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (GbfsDockRequest | null)} })\n    feed_versions?: (FeedVersionGenqlSelection & { __args?: {after?: (Scalars['Int'] | null), ids?: (Scalars['Int'][] | null), limit?: (Scalars['Int'] | null), where?: (FeedVersionFilter | null)} })\n    feeds?: (FeedGenqlSelection & { __args?: {after?: (Scalars['Int'] | null), ids?: (Scalars['Int'][] | null), limit?: (Scalars['Int'] | null), where?: (FeedFilter | null)} })\n    operators?: (OperatorGenqlSelection & { __args?: {after?: (Scalars['Int'] | null), ids?: (Scalars['Int'][] | null), limit?: (Scalars['Int'] | null), where?: (OperatorFilter | null)} })\n    places?: (PlaceGenqlSelection & { __args?: {after?: (Scalars['Int'] | null), level?: (PlaceAggregationLevel | null), limit?: (Scalars['Int'] | null), where?: (PlaceFilter | null)} })\n    routes?: (RouteGenqlSelection & { __args?: {after?: (Scalars['Int'] | null), ids?: (Scalars['Int'][] | null), limit?: (Scalars['Int'] | null), where?: (RouteFilter | null)} })\n    stops?: (StopGenqlSelection & { __args?: {after?: (Scalars['Int'] | null), ids?: (Scalars['Int'][] | null), limit?: (Scalars['Int'] | null), where?: (StopFilter | null)} })\n    trips?: (TripGenqlSelection & { __args?: {after?: (Scalars['Int'] | null), ids?: (Scalars['Int'][] | null), limit?: (Scalars['Int'] | null), where?: (TripFilter | null)} })\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** See https://gtfs.org/reference/realtime/v2/#message-timerange */\nexport interface RTTimeRangeGenqlSelection{\n    end?: boolean | number\n    start?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** See https://gtfs.org/reference/realtime/v2/#message-translatedstring */\nexport interface RTTranslationGenqlSelection{\n    language?: boolean | number\n    text?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** See https://gtfs.org/reference/realtime/v2/#message-tripdescriptor */\nexport interface RTTripDescriptorGenqlSelection{\n    direction_id?: boolean | number\n    route_id?: boolean | number\n    schedule_relationship?: boolean | number\n    start_date?: boolean | number\n    start_time?: boolean | number\n    trip_id?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** See https://gtfs.org/reference/realtime/v2/#message-vehicledescriptor */\nexport interface RTVehicleDescriptorGenqlSelection{\n    id?: boolean | number\n    label?: boolean | number\n    license_plate?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** See https://gtfs.org/schedule/reference/#routestxt */\nexport interface RouteGenqlSelection{\n    agency?: AgencyGenqlSelection\n    alerts?: (AlertGenqlSelection & { __args?: {active?: (Scalars['Boolean'] | null), limit?: (Scalars['Int'] | null)} })\n    census_geographies?: (CensusGeographyGenqlSelection & { __args: {layer: Scalars['String'], limit?: (Scalars['Int'] | null), radius?: (Scalars['Float'] | null)} })\n    continuous_drop_off?: boolean | number\n    continuous_pickup?: boolean | number\n    feed_onestop_id?: boolean | number\n    feed_version?: FeedVersionGenqlSelection\n    feed_version_sha1?: boolean | number\n    geometries?: (RouteGeometryGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null)} })\n    geometry?: boolean | number\n    headways?: (RouteHeadwayGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null)} })\n    id?: boolean | number\n    onestop_id?: boolean | number\n    patterns?: RouteStopPatternGenqlSelection\n    route_attribute?: RouteAttributeGenqlSelection\n    route_color?: boolean | number\n    route_desc?: boolean | number\n    route_id?: boolean | number\n    route_long_name?: boolean | number\n    route_short_name?: boolean | number\n    route_sort_order?: boolean | number\n    route_stop_buffer?: (RouteStopBufferGenqlSelection & { __args?: {radius?: (Scalars['Float'] | null)} })\n    route_stops?: (RouteStopGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null)} })\n    route_text_color?: boolean | number\n    route_type?: boolean | number\n    route_url?: boolean | number\n    search_rank?: boolean | number\n    stops?: (StopGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (StopFilter | null)} })\n    trips?: (TripGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (TripFilter | null)} })\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** MTC GTFS+ Extension: route_attributes.txt */\nexport interface RouteAttributeGenqlSelection{\n    category?: boolean | number\n    running_way?: boolean | number\n    subcategory?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface RouteFilter {agency_ids?: (Scalars['Int'][] | null),allow_previous_onestop_ids?: (Scalars['Boolean'] | null),feed_onestop_id?: (Scalars['String'] | null),feed_version_sha1?: (Scalars['String'] | null),license?: (LicenseFilter | null),near?: (PointRadius | null),onestop_id?: (Scalars['String'] | null),onestop_ids?: (Scalars['String'][] | null),operator_onestop_id?: (Scalars['String'] | null),route_id?: (Scalars['String'] | null),route_type?: (Scalars['Int'] | null),search?: (Scalars['String'] | null),serviced?: (Scalars['Boolean'] | null),within?: (Scalars['Polygon'] | null)}\n\nexport interface RouteGeometryGenqlSelection{\n    combined_geometry?: boolean | number\n    first_point_max_distance?: boolean | number\n    /** If true, the source GTFS feed provides no shapes. This route geometry is based on straight lines between stop points. */\n    generated?: boolean | number\n    geometry?: boolean | number\n    length?: boolean | number\n    max_segment_length?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface RouteHeadwayGenqlSelection{\n    departures?: boolean | number\n    direction_id?: boolean | number\n    dow_category?: boolean | number\n    headway_secs?: boolean | number\n    service_date?: boolean | number\n    stop?: StopGenqlSelection\n    stop_trip_count?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface RouteStopGenqlSelection{\n    agency?: AgencyGenqlSelection\n    agency_id?: boolean | number\n    id?: boolean | number\n    route?: RouteGenqlSelection\n    route_id?: boolean | number\n    stop?: StopGenqlSelection\n    stop_id?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface RouteStopBufferGenqlSelection{\n    stop_buffer?: boolean | number\n    stop_convexhull?: boolean | number\n    stop_points?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface RouteStopPatternGenqlSelection{\n    count?: boolean | number\n    direction_id?: boolean | number\n    stop_pattern_id?: boolean | number\n    trips?: (TripGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null)} })\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface ServiceCoversFilter {end_date?: (Scalars['Date'] | null),fetched_after?: (Scalars['Time'] | null),fetched_before?: (Scalars['Time'] | null),start_date?: (Scalars['Date'] | null)}\n\n\n/** Record from a static GTFS [shapes.txt](https://gtfs.org/schedule/reference/#shapestxt) file. */\nexport interface ShapeGenqlSelection{\n    generated?: boolean | number\n    geometry?: boolean | number\n    id?: boolean | number\n    shape_id?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface StepGenqlSelection{\n    distance?: DistanceGenqlSelection\n    duration?: DurationGenqlSelection\n    end_time?: boolean | number\n    geometry_offset?: boolean | number\n    instruction?: boolean | number\n    mode?: boolean | number\n    start_time?: boolean | number\n    to?: WaypointGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** See https://gtfs.org/reference/static/#stopstxt */\nexport interface StopGenqlSelection{\n    alerts?: (AlertGenqlSelection & { __args?: {active?: (Scalars['Boolean'] | null), limit?: (Scalars['Int'] | null)} })\n    arrivals?: (StopTimeGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (StopTimeFilter | null)} })\n    census_geographies?: (CensusGeographyGenqlSelection & { __args: {layer: Scalars['String'], limit?: (Scalars['Int'] | null), radius?: (Scalars['Float'] | null)} })\n    children?: (StopGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null)} })\n    departures?: (StopTimeGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (StopTimeFilter | null)} })\n    directions?: (DirectionsGenqlSelection & { __args?: {depart_at?: (Scalars['Time'] | null), from?: (WaypointInput | null), mode?: (StepMode | null), to?: (WaypointInput | null)} })\n    external_reference?: StopExternalReferenceGenqlSelection\n    feed_onestop_id?: boolean | number\n    feed_version?: FeedVersionGenqlSelection\n    feed_version_sha1?: boolean | number\n    geometry?: boolean | number\n    id?: boolean | number\n    level?: LevelGenqlSelection\n    location_type?: boolean | number\n    nearby_stops?: (StopGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), radius?: (Scalars['Float'] | null)} })\n    observations?: (StopObservationGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (StopObservationFilter | null)} })\n    onestop_id?: boolean | number\n    parent?: StopGenqlSelection\n    pathways_from_stop?: (PathwayGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null)} })\n    pathways_to_stop?: (PathwayGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null)} })\n    place?: StopPlaceGenqlSelection\n    platform_code?: boolean | number\n    route_stops?: (RouteStopGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null)} })\n    search_rank?: boolean | number\n    stop_code?: boolean | number\n    stop_desc?: boolean | number\n    stop_id?: boolean | number\n    stop_name?: boolean | number\n    stop_times?: (StopTimeGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (StopTimeFilter | null)} })\n    stop_timezone?: boolean | number\n    stop_url?: boolean | number\n    tts_stop_name?: boolean | number\n    wheelchair_boarding?: boolean | number\n    zone_id?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface StopExternalReferenceGenqlSelection{\n    id?: boolean | number\n    inactive?: boolean | number\n    target_active_stop?: StopGenqlSelection\n    target_feed_onestop_id?: boolean | number\n    target_stop_id?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface StopFilter {agency_ids?: (Scalars['Int'][] | null),allow_previous_onestop_ids?: (Scalars['Boolean'] | null),feed_onestop_id?: (Scalars['String'] | null),feed_version_sha1?: (Scalars['String'] | null),license?: (LicenseFilter | null),location_type?: (Scalars['Int'] | null),near?: (PointRadius | null),onestop_id?: (Scalars['String'] | null),onestop_ids?: (Scalars['String'][] | null),search?: (Scalars['String'] | null),served_by_onestop_ids?: (Scalars['String'][] | null),serviced?: (Scalars['Boolean'] | null),stop_code?: (Scalars['String'] | null),stop_id?: (Scalars['String'] | null),within?: (Scalars['Polygon'] | null)}\n\nexport interface StopObservationGenqlSelection{\n    agency_id?: boolean | number\n    from_stop_id?: boolean | number\n    observed_arrival_time?: boolean | number\n    observed_departure_time?: boolean | number\n    route_id?: boolean | number\n    schedule_relationship?: boolean | number\n    scheduled_arrival_time?: boolean | number\n    scheduled_departure_time?: boolean | number\n    source?: boolean | number\n    stop_sequence?: boolean | number\n    to_stop_id?: boolean | number\n    trip_id?: boolean | number\n    trip_start_date?: boolean | number\n    trip_start_time?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface StopObservationFilter {feed_version_id: Scalars['Int'],source: Scalars['String'],trip_start_date: Scalars['Date']}\n\nexport interface StopPlaceGenqlSelection{\n    adm0_iso?: boolean | number\n    adm0_name?: boolean | number\n    adm1_iso?: boolean | number\n    adm1_name?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** Record from a static GTFS [stop_times.txt](https://gtfs.org/schedule/reference/#stop_timestxt) file. */\nexport interface StopTimeGenqlSelection{\n    arrival?: StopTimeEventGenqlSelection\n    arrival_time?: boolean | number\n    continuous_drop_off?: boolean | number\n    continuous_pickup?: boolean | number\n    departure?: StopTimeEventGenqlSelection\n    departure_time?: boolean | number\n    drop_off_type?: boolean | number\n    interpolated?: boolean | number\n    pickup_type?: boolean | number\n    service_date?: boolean | number\n    shape_dist_traveled?: boolean | number\n    stop?: StopGenqlSelection\n    stop_headsign?: boolean | number\n    stop_sequence?: boolean | number\n    timepoint?: boolean | number\n    trip?: TripGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface StopTimeEventGenqlSelection{\n    delay?: boolean | number\n    estimated?: boolean | number\n    estimated_utc?: boolean | number\n    scheduled?: boolean | number\n    stop_timezone?: boolean | number\n    uncertainty?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface StopTimeFilter {allow_previous_route_onestop_ids?: (Scalars['Boolean'] | null),end?: (Scalars['Seconds'] | null),end_time?: (Scalars['Int'] | null),exclude_first?: (Scalars['Boolean'] | null),exclude_last?: (Scalars['Boolean'] | null),next?: (Scalars['Int'] | null),route_onestop_ids?: (Scalars['String'][] | null),service_date?: (Scalars['Date'] | null),start?: (Scalars['Seconds'] | null),start_time?: (Scalars['Int'] | null),use_service_window?: (Scalars['Boolean'] | null)}\n\n\n/** Record from a static GTFS [trips.txt](https://gtfs.org/schedule/reference/#tripstxt) file optionally enriched with by GTFS Realtime [TripUpdate](https://gtfs.org/reference/realtime/v2/#message-tripupdate) and [Alert](https://gtfs.org/reference/realtime/v2/#message-alert) messages. */\nexport interface TripGenqlSelection{\n    alerts?: (AlertGenqlSelection & { __args?: {active?: (Scalars['Boolean'] | null), limit?: (Scalars['Int'] | null)} })\n    bikes_allowed?: boolean | number\n    block_id?: boolean | number\n    calendar?: CalendarGenqlSelection\n    direction_id?: boolean | number\n    feed_version?: FeedVersionGenqlSelection\n    frequencies?: (FrequencyGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null)} })\n    id?: boolean | number\n    route?: RouteGenqlSelection\n    schedule_relationship?: boolean | number\n    shape?: ShapeGenqlSelection\n    stop_pattern_id?: boolean | number\n    stop_times?: (StopTimeGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), where?: (TripStopTimeFilter | null)} })\n    timestamp?: boolean | number\n    trip_headsign?: boolean | number\n    trip_id?: boolean | number\n    trip_short_name?: boolean | number\n    wheelchair_accessible?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface TripFilter {feed_onestop_id?: (Scalars['String'] | null),feed_version_sha1?: (Scalars['String'] | null),license?: (LicenseFilter | null),route_ids?: (Scalars['Int'][] | null),route_onestop_ids?: (Scalars['String'][] | null),service_date?: (Scalars['Date'] | null),stop_pattern_id?: (Scalars['Int'] | null),trip_id?: (Scalars['String'] | null)}\n\nexport interface TripStopTimeFilter {end?: (Scalars['Seconds'] | null),start?: (Scalars['Seconds'] | null)}\n\nexport interface ValidationResultGenqlSelection{\n    agencies?: (AgencyGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null)} })\n    earliest_calendar_date?: boolean | number\n    errors?: ValidationResultErrorGroupGenqlSelection\n    failure_reason?: boolean | number\n    feed_infos?: (FeedInfoGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null)} })\n    files?: FeedVersionFileInfoGenqlSelection\n    latest_calendar_date?: boolean | number\n    routes?: (RouteGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null)} })\n    service_levels?: (FeedVersionServiceLevelGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), route_id?: (Scalars['String'] | null)} })\n    sha1?: boolean | number\n    stops?: (StopGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null)} })\n    success?: boolean | number\n    warnings?: ValidationResultErrorGroupGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface ValidationResultErrorGenqlSelection{\n    entity_id?: boolean | number\n    error_type?: boolean | number\n    field?: boolean | number\n    filename?: boolean | number\n    message?: boolean | number\n    value?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface ValidationResultErrorGroupGenqlSelection{\n    count?: boolean | number\n    error_type?: boolean | number\n    errors?: ValidationResultErrorGenqlSelection\n    filename?: boolean | number\n    limit?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\n\n/** [Vehicle Position](https://gtfs.org/reference/realtime/v2/#message-vehicleposition) message provided by a source GTFS Realtime feed. */\nexport interface VehiclePositionGenqlSelection{\n    congestion_level?: boolean | number\n    current_status?: boolean | number\n    current_stop_sequence?: boolean | number\n    position?: boolean | number\n    stop_id?: StopGenqlSelection\n    timestamp?: boolean | number\n    vehicle?: RTVehicleDescriptorGenqlSelection\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface WaypointGenqlSelection{\n    lat?: boolean | number\n    lon?: boolean | number\n    name?: boolean | number\n    __typename?: boolean | number\n    __scalar?: boolean | number\n}\n\nexport interface WaypointInput {lat: Scalars['Float'],lon: Scalars['Float'],name?: (Scalars['String'] | null)}\n\n\n    const Agency_possibleTypes: string[] = ['Agency']\n    export const isAgency = (obj?: { __typename?: any } | null): obj is Agency => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isAgency\"')\n      return Agency_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const AgencyPlace_possibleTypes: string[] = ['AgencyPlace']\n    export const isAgencyPlace = (obj?: { __typename?: any } | null): obj is AgencyPlace => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isAgencyPlace\"')\n      return AgencyPlace_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Alert_possibleTypes: string[] = ['Alert']\n    export const isAlert = (obj?: { __typename?: any } | null): obj is Alert => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isAlert\"')\n      return Alert_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Calendar_possibleTypes: string[] = ['Calendar']\n    export const isCalendar = (obj?: { __typename?: any } | null): obj is Calendar => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isCalendar\"')\n      return Calendar_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const CensusGeography_possibleTypes: string[] = ['CensusGeography']\n    export const isCensusGeography = (obj?: { __typename?: any } | null): obj is CensusGeography => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isCensusGeography\"')\n      return CensusGeography_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const CensusTable_possibleTypes: string[] = ['CensusTable']\n    export const isCensusTable = (obj?: { __typename?: any } | null): obj is CensusTable => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isCensusTable\"')\n      return CensusTable_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const CensusValue_possibleTypes: string[] = ['CensusValue']\n    export const isCensusValue = (obj?: { __typename?: any } | null): obj is CensusValue => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isCensusValue\"')\n      return CensusValue_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Directions_possibleTypes: string[] = ['Directions']\n    export const isDirections = (obj?: { __typename?: any } | null): obj is Directions => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isDirections\"')\n      return Directions_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Distance_possibleTypes: string[] = ['Distance']\n    export const isDistance = (obj?: { __typename?: any } | null): obj is Distance => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isDistance\"')\n      return Distance_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Duration_possibleTypes: string[] = ['Duration']\n    export const isDuration = (obj?: { __typename?: any } | null): obj is Duration => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isDuration\"')\n      return Duration_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Feed_possibleTypes: string[] = ['Feed']\n    export const isFeed = (obj?: { __typename?: any } | null): obj is Feed => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isFeed\"')\n      return Feed_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const FeedAuthorization_possibleTypes: string[] = ['FeedAuthorization']\n    export const isFeedAuthorization = (obj?: { __typename?: any } | null): obj is FeedAuthorization => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isFeedAuthorization\"')\n      return FeedAuthorization_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const FeedFetch_possibleTypes: string[] = ['FeedFetch']\n    export const isFeedFetch = (obj?: { __typename?: any } | null): obj is FeedFetch => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isFeedFetch\"')\n      return FeedFetch_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const FeedInfo_possibleTypes: string[] = ['FeedInfo']\n    export const isFeedInfo = (obj?: { __typename?: any } | null): obj is FeedInfo => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isFeedInfo\"')\n      return FeedInfo_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const FeedLicense_possibleTypes: string[] = ['FeedLicense']\n    export const isFeedLicense = (obj?: { __typename?: any } | null): obj is FeedLicense => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isFeedLicense\"')\n      return FeedLicense_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const FeedState_possibleTypes: string[] = ['FeedState']\n    export const isFeedState = (obj?: { __typename?: any } | null): obj is FeedState => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isFeedState\"')\n      return FeedState_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const FeedUrls_possibleTypes: string[] = ['FeedUrls']\n    export const isFeedUrls = (obj?: { __typename?: any } | null): obj is FeedUrls => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isFeedUrls\"')\n      return FeedUrls_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const FeedVersion_possibleTypes: string[] = ['FeedVersion']\n    export const isFeedVersion = (obj?: { __typename?: any } | null): obj is FeedVersion => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isFeedVersion\"')\n      return FeedVersion_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const FeedVersionDeleteResult_possibleTypes: string[] = ['FeedVersionDeleteResult']\n    export const isFeedVersionDeleteResult = (obj?: { __typename?: any } | null): obj is FeedVersionDeleteResult => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isFeedVersionDeleteResult\"')\n      return FeedVersionDeleteResult_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const FeedVersionFetchResult_possibleTypes: string[] = ['FeedVersionFetchResult']\n    export const isFeedVersionFetchResult = (obj?: { __typename?: any } | null): obj is FeedVersionFetchResult => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isFeedVersionFetchResult\"')\n      return FeedVersionFetchResult_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const FeedVersionFileInfo_possibleTypes: string[] = ['FeedVersionFileInfo']\n    export const isFeedVersionFileInfo = (obj?: { __typename?: any } | null): obj is FeedVersionFileInfo => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isFeedVersionFileInfo\"')\n      return FeedVersionFileInfo_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const FeedVersionGtfsImport_possibleTypes: string[] = ['FeedVersionGtfsImport']\n    export const isFeedVersionGtfsImport = (obj?: { __typename?: any } | null): obj is FeedVersionGtfsImport => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isFeedVersionGtfsImport\"')\n      return FeedVersionGtfsImport_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const FeedVersionImportResult_possibleTypes: string[] = ['FeedVersionImportResult']\n    export const isFeedVersionImportResult = (obj?: { __typename?: any } | null): obj is FeedVersionImportResult => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isFeedVersionImportResult\"')\n      return FeedVersionImportResult_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const FeedVersionServiceLevel_possibleTypes: string[] = ['FeedVersionServiceLevel']\n    export const isFeedVersionServiceLevel = (obj?: { __typename?: any } | null): obj is FeedVersionServiceLevel => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isFeedVersionServiceLevel\"')\n      return FeedVersionServiceLevel_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const FeedVersionUnimportResult_possibleTypes: string[] = ['FeedVersionUnimportResult']\n    export const isFeedVersionUnimportResult = (obj?: { __typename?: any } | null): obj is FeedVersionUnimportResult => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isFeedVersionUnimportResult\"')\n      return FeedVersionUnimportResult_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Frequency_possibleTypes: string[] = ['Frequency']\n    export const isFrequency = (obj?: { __typename?: any } | null): obj is Frequency => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isFrequency\"')\n      return Frequency_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsAlertTime_possibleTypes: string[] = ['GbfsAlertTime']\n    export const isGbfsAlertTime = (obj?: { __typename?: any } | null): obj is GbfsAlertTime => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsAlertTime\"')\n      return GbfsAlertTime_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsBrandAsset_possibleTypes: string[] = ['GbfsBrandAsset']\n    export const isGbfsBrandAsset = (obj?: { __typename?: any } | null): obj is GbfsBrandAsset => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsBrandAsset\"')\n      return GbfsBrandAsset_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsFeed_possibleTypes: string[] = ['GbfsFeed']\n    export const isGbfsFeed = (obj?: { __typename?: any } | null): obj is GbfsFeed => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsFeed\"')\n      return GbfsFeed_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsFreeBikeStatus_possibleTypes: string[] = ['GbfsFreeBikeStatus']\n    export const isGbfsFreeBikeStatus = (obj?: { __typename?: any } | null): obj is GbfsFreeBikeStatus => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsFreeBikeStatus\"')\n      return GbfsFreeBikeStatus_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsGeofenceFeature_possibleTypes: string[] = ['GbfsGeofenceFeature']\n    export const isGbfsGeofenceFeature = (obj?: { __typename?: any } | null): obj is GbfsGeofenceFeature => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsGeofenceFeature\"')\n      return GbfsGeofenceFeature_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsGeofenceProperty_possibleTypes: string[] = ['GbfsGeofenceProperty']\n    export const isGbfsGeofenceProperty = (obj?: { __typename?: any } | null): obj is GbfsGeofenceProperty => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsGeofenceProperty\"')\n      return GbfsGeofenceProperty_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsGeofenceRule_possibleTypes: string[] = ['GbfsGeofenceRule']\n    export const isGbfsGeofenceRule = (obj?: { __typename?: any } | null): obj is GbfsGeofenceRule => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsGeofenceRule\"')\n      return GbfsGeofenceRule_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsGeofenceZone_possibleTypes: string[] = ['GbfsGeofenceZone']\n    export const isGbfsGeofenceZone = (obj?: { __typename?: any } | null): obj is GbfsGeofenceZone => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsGeofenceZone\"')\n      return GbfsGeofenceZone_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsPlanPrice_possibleTypes: string[] = ['GbfsPlanPrice']\n    export const isGbfsPlanPrice = (obj?: { __typename?: any } | null): obj is GbfsPlanPrice => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsPlanPrice\"')\n      return GbfsPlanPrice_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsRentalApp_possibleTypes: string[] = ['GbfsRentalApp']\n    export const isGbfsRentalApp = (obj?: { __typename?: any } | null): obj is GbfsRentalApp => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsRentalApp\"')\n      return GbfsRentalApp_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsRentalApps_possibleTypes: string[] = ['GbfsRentalApps']\n    export const isGbfsRentalApps = (obj?: { __typename?: any } | null): obj is GbfsRentalApps => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsRentalApps\"')\n      return GbfsRentalApps_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsRentalUris_possibleTypes: string[] = ['GbfsRentalUris']\n    export const isGbfsRentalUris = (obj?: { __typename?: any } | null): obj is GbfsRentalUris => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsRentalUris\"')\n      return GbfsRentalUris_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsStationInformation_possibleTypes: string[] = ['GbfsStationInformation']\n    export const isGbfsStationInformation = (obj?: { __typename?: any } | null): obj is GbfsStationInformation => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsStationInformation\"')\n      return GbfsStationInformation_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsStationStatus_possibleTypes: string[] = ['GbfsStationStatus']\n    export const isGbfsStationStatus = (obj?: { __typename?: any } | null): obj is GbfsStationStatus => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsStationStatus\"')\n      return GbfsStationStatus_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsSystemAlert_possibleTypes: string[] = ['GbfsSystemAlert']\n    export const isGbfsSystemAlert = (obj?: { __typename?: any } | null): obj is GbfsSystemAlert => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsSystemAlert\"')\n      return GbfsSystemAlert_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsSystemCalendar_possibleTypes: string[] = ['GbfsSystemCalendar']\n    export const isGbfsSystemCalendar = (obj?: { __typename?: any } | null): obj is GbfsSystemCalendar => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsSystemCalendar\"')\n      return GbfsSystemCalendar_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsSystemHour_possibleTypes: string[] = ['GbfsSystemHour']\n    export const isGbfsSystemHour = (obj?: { __typename?: any } | null): obj is GbfsSystemHour => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsSystemHour\"')\n      return GbfsSystemHour_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsSystemInformation_possibleTypes: string[] = ['GbfsSystemInformation']\n    export const isGbfsSystemInformation = (obj?: { __typename?: any } | null): obj is GbfsSystemInformation => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsSystemInformation\"')\n      return GbfsSystemInformation_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsSystemPricingPlan_possibleTypes: string[] = ['GbfsSystemPricingPlan']\n    export const isGbfsSystemPricingPlan = (obj?: { __typename?: any } | null): obj is GbfsSystemPricingPlan => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsSystemPricingPlan\"')\n      return GbfsSystemPricingPlan_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsSystemRegion_possibleTypes: string[] = ['GbfsSystemRegion']\n    export const isGbfsSystemRegion = (obj?: { __typename?: any } | null): obj is GbfsSystemRegion => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsSystemRegion\"')\n      return GbfsSystemRegion_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsSystemVersion_possibleTypes: string[] = ['GbfsSystemVersion']\n    export const isGbfsSystemVersion = (obj?: { __typename?: any } | null): obj is GbfsSystemVersion => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsSystemVersion\"')\n      return GbfsSystemVersion_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsVehicleAssets_possibleTypes: string[] = ['GbfsVehicleAssets']\n    export const isGbfsVehicleAssets = (obj?: { __typename?: any } | null): obj is GbfsVehicleAssets => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsVehicleAssets\"')\n      return GbfsVehicleAssets_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsVehicleDockAvailable_possibleTypes: string[] = ['GbfsVehicleDockAvailable']\n    export const isGbfsVehicleDockAvailable = (obj?: { __typename?: any } | null): obj is GbfsVehicleDockAvailable => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsVehicleDockAvailable\"')\n      return GbfsVehicleDockAvailable_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsVehicleType_possibleTypes: string[] = ['GbfsVehicleType']\n    export const isGbfsVehicleType = (obj?: { __typename?: any } | null): obj is GbfsVehicleType => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsVehicleType\"')\n      return GbfsVehicleType_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const GbfsVehicleTypeAvailable_possibleTypes: string[] = ['GbfsVehicleTypeAvailable']\n    export const isGbfsVehicleTypeAvailable = (obj?: { __typename?: any } | null): obj is GbfsVehicleTypeAvailable => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isGbfsVehicleTypeAvailable\"')\n      return GbfsVehicleTypeAvailable_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Itinerary_possibleTypes: string[] = ['Itinerary']\n    export const isItinerary = (obj?: { __typename?: any } | null): obj is Itinerary => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isItinerary\"')\n      return Itinerary_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Leg_possibleTypes: string[] = ['Leg']\n    export const isLeg = (obj?: { __typename?: any } | null): obj is Leg => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isLeg\"')\n      return Leg_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Level_possibleTypes: string[] = ['Level']\n    export const isLevel = (obj?: { __typename?: any } | null): obj is Level => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isLevel\"')\n      return Level_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Operator_possibleTypes: string[] = ['Operator']\n    export const isOperator = (obj?: { __typename?: any } | null): obj is Operator => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isOperator\"')\n      return Operator_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Pathway_possibleTypes: string[] = ['Pathway']\n    export const isPathway = (obj?: { __typename?: any } | null): obj is Pathway => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isPathway\"')\n      return Pathway_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Place_possibleTypes: string[] = ['Place']\n    export const isPlace = (obj?: { __typename?: any } | null): obj is Place => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isPlace\"')\n      return Place_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Query_possibleTypes: string[] = ['Query']\n    export const isQuery = (obj?: { __typename?: any } | null): obj is Query => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isQuery\"')\n      return Query_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const RTTimeRange_possibleTypes: string[] = ['RTTimeRange']\n    export const isRTTimeRange = (obj?: { __typename?: any } | null): obj is RTTimeRange => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isRTTimeRange\"')\n      return RTTimeRange_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const RTTranslation_possibleTypes: string[] = ['RTTranslation']\n    export const isRTTranslation = (obj?: { __typename?: any } | null): obj is RTTranslation => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isRTTranslation\"')\n      return RTTranslation_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const RTTripDescriptor_possibleTypes: string[] = ['RTTripDescriptor']\n    export const isRTTripDescriptor = (obj?: { __typename?: any } | null): obj is RTTripDescriptor => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isRTTripDescriptor\"')\n      return RTTripDescriptor_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const RTVehicleDescriptor_possibleTypes: string[] = ['RTVehicleDescriptor']\n    export const isRTVehicleDescriptor = (obj?: { __typename?: any } | null): obj is RTVehicleDescriptor => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isRTVehicleDescriptor\"')\n      return RTVehicleDescriptor_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Route_possibleTypes: string[] = ['Route']\n    export const isRoute = (obj?: { __typename?: any } | null): obj is Route => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isRoute\"')\n      return Route_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const RouteAttribute_possibleTypes: string[] = ['RouteAttribute']\n    export const isRouteAttribute = (obj?: { __typename?: any } | null): obj is RouteAttribute => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isRouteAttribute\"')\n      return RouteAttribute_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const RouteGeometry_possibleTypes: string[] = ['RouteGeometry']\n    export const isRouteGeometry = (obj?: { __typename?: any } | null): obj is RouteGeometry => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isRouteGeometry\"')\n      return RouteGeometry_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const RouteHeadway_possibleTypes: string[] = ['RouteHeadway']\n    export const isRouteHeadway = (obj?: { __typename?: any } | null): obj is RouteHeadway => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isRouteHeadway\"')\n      return RouteHeadway_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const RouteStop_possibleTypes: string[] = ['RouteStop']\n    export const isRouteStop = (obj?: { __typename?: any } | null): obj is RouteStop => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isRouteStop\"')\n      return RouteStop_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const RouteStopBuffer_possibleTypes: string[] = ['RouteStopBuffer']\n    export const isRouteStopBuffer = (obj?: { __typename?: any } | null): obj is RouteStopBuffer => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isRouteStopBuffer\"')\n      return RouteStopBuffer_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const RouteStopPattern_possibleTypes: string[] = ['RouteStopPattern']\n    export const isRouteStopPattern = (obj?: { __typename?: any } | null): obj is RouteStopPattern => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isRouteStopPattern\"')\n      return RouteStopPattern_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Shape_possibleTypes: string[] = ['Shape']\n    export const isShape = (obj?: { __typename?: any } | null): obj is Shape => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isShape\"')\n      return Shape_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Step_possibleTypes: string[] = ['Step']\n    export const isStep = (obj?: { __typename?: any } | null): obj is Step => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isStep\"')\n      return Step_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Stop_possibleTypes: string[] = ['Stop']\n    export const isStop = (obj?: { __typename?: any } | null): obj is Stop => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isStop\"')\n      return Stop_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const StopExternalReference_possibleTypes: string[] = ['StopExternalReference']\n    export const isStopExternalReference = (obj?: { __typename?: any } | null): obj is StopExternalReference => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isStopExternalReference\"')\n      return StopExternalReference_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const StopObservation_possibleTypes: string[] = ['StopObservation']\n    export const isStopObservation = (obj?: { __typename?: any } | null): obj is StopObservation => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isStopObservation\"')\n      return StopObservation_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const StopPlace_possibleTypes: string[] = ['StopPlace']\n    export const isStopPlace = (obj?: { __typename?: any } | null): obj is StopPlace => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isStopPlace\"')\n      return StopPlace_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const StopTime_possibleTypes: string[] = ['StopTime']\n    export const isStopTime = (obj?: { __typename?: any } | null): obj is StopTime => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isStopTime\"')\n      return StopTime_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const StopTimeEvent_possibleTypes: string[] = ['StopTimeEvent']\n    export const isStopTimeEvent = (obj?: { __typename?: any } | null): obj is StopTimeEvent => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isStopTimeEvent\"')\n      return StopTimeEvent_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Trip_possibleTypes: string[] = ['Trip']\n    export const isTrip = (obj?: { __typename?: any } | null): obj is Trip => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isTrip\"')\n      return Trip_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const ValidationResult_possibleTypes: string[] = ['ValidationResult']\n    export const isValidationResult = (obj?: { __typename?: any } | null): obj is ValidationResult => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isValidationResult\"')\n      return ValidationResult_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const ValidationResultError_possibleTypes: string[] = ['ValidationResultError']\n    export const isValidationResultError = (obj?: { __typename?: any } | null): obj is ValidationResultError => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isValidationResultError\"')\n      return ValidationResultError_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const ValidationResultErrorGroup_possibleTypes: string[] = ['ValidationResultErrorGroup']\n    export const isValidationResultErrorGroup = (obj?: { __typename?: any } | null): obj is ValidationResultErrorGroup => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isValidationResultErrorGroup\"')\n      return ValidationResultErrorGroup_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const VehiclePosition_possibleTypes: string[] = ['VehiclePosition']\n    export const isVehiclePosition = (obj?: { __typename?: any } | null): obj is VehiclePosition => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isVehiclePosition\"')\n      return VehiclePosition_possibleTypes.includes(obj.__typename)\n    }\n    \n\n\n    const Waypoint_possibleTypes: string[] = ['Waypoint']\n    export const isWaypoint = (obj?: { __typename?: any } | null): obj is Waypoint => {\n      if (!obj?.__typename) throw new Error('__typename is missing in \"isWaypoint\"')\n      return Waypoint_possibleTypes.includes(obj.__typename)\n    }\n    \n\nexport const enumDistanceUnit = {\n   KILOMETERS: 'KILOMETERS' as const,\n   MILES: 'MILES' as const\n}\n\nexport const enumDurationUnit = {\n   SECONDS: 'SECONDS' as const\n}\n\nexport const enumFeedSourceUrlTypes = {\n   gbfs_auto_discovery: 'gbfs_auto_discovery' as const,\n   mds_provider: 'mds_provider' as const,\n   realtime_alerts: 'realtime_alerts' as const,\n   realtime_trip_updates: 'realtime_trip_updates' as const,\n   realtime_vehicle_positions: 'realtime_vehicle_positions' as const,\n   static_current: 'static_current' as const,\n   static_historic: 'static_historic' as const,\n   static_hypothetical: 'static_hypothetical' as const,\n   static_planned: 'static_planned' as const\n}\n\nexport const enumFeedSpecTypes = {\n   GBFS: 'GBFS' as const,\n   GTFS: 'GTFS' as const,\n   GTFS_RT: 'GTFS_RT' as const,\n   MDS: 'MDS' as const\n}\n\nexport const enumImportStatus = {\n   ERROR: 'ERROR' as const,\n   IN_PROGRESS: 'IN_PROGRESS' as const,\n   SUCCESS: 'SUCCESS' as const\n}\n\nexport const enumLicenseValue = {\n   EXCLUDE_NO: 'EXCLUDE_NO' as const,\n   NO: 'NO' as const,\n   UNKNOWN: 'UNKNOWN' as const,\n   YES: 'YES' as const\n}\n\nexport const enumPlaceAggregationLevel = {\n   ADM0: 'ADM0' as const,\n   ADM0_ADM1: 'ADM0_ADM1' as const,\n   ADM0_ADM1_CITY: 'ADM0_ADM1_CITY' as const,\n   ADM0_CITY: 'ADM0_CITY' as const,\n   ADM1_CITY: 'ADM1_CITY' as const,\n   CITY: 'CITY' as const\n}\n\nexport const enumRole = {\n   ADMIN: 'ADMIN' as const,\n   ANON: 'ANON' as const,\n   USER: 'USER' as const\n}\n\nexport const enumScheduleRelationship = {\n   ADDED: 'ADDED' as const,\n   CANCELED: 'CANCELED' as const,\n   SCHEDULED: 'SCHEDULED' as const,\n   UNSCHEDULED: 'UNSCHEDULED' as const\n}\n\nexport const enumStepMode = {\n   AUTO: 'AUTO' as const,\n   BICYCLE: 'BICYCLE' as const,\n   LINE: 'LINE' as const,\n   TRANSIT: 'TRANSIT' as const,\n   WALK: 'WALK' as const\n}\n","// @ts-nocheck\nimport type { QueryGenqlSelection, Query } from './schema'\nimport {\n  linkTypeMap,\n  createClient as createClientOriginal,\n  generateGraphqlOperation,\n  type FieldsSelection,\n  type GraphqlOperation,\n  type ClientOptions,\n  GenqlError,\n} from './runtime'\nexport type { FieldsSelection } from './runtime'\nexport { GenqlError }\n\nimport types from './types'\nexport * from './schema'\nconst typeMap = linkTypeMap(types as any)\n\nexport interface Client {\n  query<R extends QueryGenqlSelection>(\n    request: R & { __name?: string },\n  ): Promise<FieldsSelection<Query, R>>\n}\n\nexport const createClient = function (options?: ClientOptions): Client {\n  return createClientOriginal({\n    url: undefined,\n\n    ...options,\n    queryRoot: typeMap.Query!,\n    mutationRoot: typeMap.Mutation!,\n    subscriptionRoot: typeMap.Subscription!,\n  }) as any\n}\n\nexport const everything = {\n  __scalar: true,\n}\n\nexport type QueryResult<fields extends QueryGenqlSelection> = FieldsSelection<\n  Query,\n  fields\n>\nexport const generateQueryOp: (\n  fields: QueryGenqlSelection & { __name?: string },\n) => GraphqlOperation = function (fields) {\n  return generateGraphqlOperation('query', typeMap.Query!, fields as any)\n}\n","import { createClient as originalCreateClient } from \"./_client\";\n\ntype Optional<T extends object, K extends keyof T = keyof T> = Omit<T, K> &\n  Partial<Pick<T, K>>;\n\nexport * from \"./_client\";\n\nexport type ClientOptions = Optional<\n  NonNullable<Parameters<typeof originalCreateClient>[0]>,\n  \"url\" | \"batch\"\n> & {\n  apiKey: string;\n};\n\nexport const createClient = ({ apiKey, ...options }: ClientOptions) => {\n  options.batch = !!options.batch ? options.batch : false;\n  options.url = options.url ?? \"https://transit.land/api/v2/query\";\n  options.headers = {\n    ...options.headers,\n    apiKey,\n  };\n  const { query } = originalCreateClient(options);\n  return { query };\n};\n"]}